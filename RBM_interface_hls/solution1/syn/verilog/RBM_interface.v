// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="RBM_interface_RBM_interface,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=12.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.908000,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2020,HLS_SYN_LUT=3239,HLS_VERSION=2022_2}" *)

module RBM_interface (
        ap_clk,
        ap_rst_n,
        axis_control_in_TDATA,
        axis_control_in_TVALID,
        axis_control_in_TREADY,
        axis_control_in_TKEEP,
        axis_control_in_TSTRB,
        axis_control_in_TLAST,
        axis_sigmoid_switch_in_TDATA,
        axis_sigmoid_switch_in_TVALID,
        axis_sigmoid_switch_in_TREADY,
        axis_sigmoid_switch_in_TKEEP,
        axis_sigmoid_switch_in_TSTRB,
        axis_sigmoid_switch_in_TLAST,
        axis_vector_in_len_in_TDATA,
        axis_vector_in_len_in_TVALID,
        axis_vector_in_len_in_TREADY,
        axis_vector_in_len_in_TKEEP,
        axis_vector_in_len_in_TSTRB,
        axis_vector_in_len_in_TLAST,
        axis_vector_out_len_in_TDATA,
        axis_vector_out_len_in_TVALID,
        axis_vector_out_len_in_TREADY,
        axis_vector_out_len_in_TKEEP,
        axis_vector_out_len_in_TSTRB,
        axis_vector_out_len_in_TLAST,
        axis_vector_in_TDATA,
        axis_vector_in_TVALID,
        axis_vector_in_TREADY,
        axis_vector_in_TKEEP,
        axis_vector_in_TSTRB,
        axis_vector_in_TLAST,
        axis_weight_in_TDATA,
        axis_weight_in_TVALID,
        axis_weight_in_TREADY,
        axis_weight_in_TKEEP,
        axis_weight_in_TSTRB,
        axis_weight_in_TLAST,
        axis_bias_in_TDATA,
        axis_bias_in_TVALID,
        axis_bias_in_TREADY,
        axis_bias_in_TKEEP,
        axis_bias_in_TSTRB,
        axis_bias_in_TLAST,
        axis_vector_out_TDATA,
        axis_vector_out_TVALID,
        axis_vector_out_TREADY,
        axis_vector_out_TKEEP,
        axis_vector_out_TSTRB,
        axis_vector_out_TLAST,
        stream_control_in_TDATA,
        stream_control_in_TVALID,
        stream_control_in_TREADY,
        stream_sigmoid_switch_in_TDATA,
        stream_sigmoid_switch_in_TVALID,
        stream_sigmoid_switch_in_TREADY,
        stream_vector_in_len_in_TDATA,
        stream_vector_in_len_in_TVALID,
        stream_vector_in_len_in_TREADY,
        stream_vector_out_len_in_TDATA,
        stream_vector_out_len_in_TVALID,
        stream_vector_out_len_in_TREADY,
        stream_vector_in_TDATA,
        stream_vector_in_TVALID,
        stream_vector_in_TREADY,
        stream_weight_in_TDATA,
        stream_weight_in_TVALID,
        stream_weight_in_TREADY,
        stream_bias_in_TDATA,
        stream_bias_in_TVALID,
        stream_bias_in_TREADY,
        stream_vector_out_TDATA,
        stream_vector_out_TVALID,
        stream_vector_out_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [7:0] axis_control_in_TDATA;
input   axis_control_in_TVALID;
output   axis_control_in_TREADY;
input  [0:0] axis_control_in_TKEEP;
input  [0:0] axis_control_in_TSTRB;
input  [0:0] axis_control_in_TLAST;
input  [7:0] axis_sigmoid_switch_in_TDATA;
input   axis_sigmoid_switch_in_TVALID;
output   axis_sigmoid_switch_in_TREADY;
input  [0:0] axis_sigmoid_switch_in_TKEEP;
input  [0:0] axis_sigmoid_switch_in_TSTRB;
input  [0:0] axis_sigmoid_switch_in_TLAST;
input  [15:0] axis_vector_in_len_in_TDATA;
input   axis_vector_in_len_in_TVALID;
output   axis_vector_in_len_in_TREADY;
input  [1:0] axis_vector_in_len_in_TKEEP;
input  [1:0] axis_vector_in_len_in_TSTRB;
input  [0:0] axis_vector_in_len_in_TLAST;
input  [15:0] axis_vector_out_len_in_TDATA;
input   axis_vector_out_len_in_TVALID;
output   axis_vector_out_len_in_TREADY;
input  [1:0] axis_vector_out_len_in_TKEEP;
input  [1:0] axis_vector_out_len_in_TSTRB;
input  [0:0] axis_vector_out_len_in_TLAST;
input  [15:0] axis_vector_in_TDATA;
input   axis_vector_in_TVALID;
output   axis_vector_in_TREADY;
input  [1:0] axis_vector_in_TKEEP;
input  [1:0] axis_vector_in_TSTRB;
input  [0:0] axis_vector_in_TLAST;
input  [31:0] axis_weight_in_TDATA;
input   axis_weight_in_TVALID;
output   axis_weight_in_TREADY;
input  [3:0] axis_weight_in_TKEEP;
input  [3:0] axis_weight_in_TSTRB;
input  [0:0] axis_weight_in_TLAST;
input  [31:0] axis_bias_in_TDATA;
input   axis_bias_in_TVALID;
output   axis_bias_in_TREADY;
input  [3:0] axis_bias_in_TKEEP;
input  [3:0] axis_bias_in_TSTRB;
input  [0:0] axis_bias_in_TLAST;
output  [31:0] axis_vector_out_TDATA;
output   axis_vector_out_TVALID;
input   axis_vector_out_TREADY;
output  [3:0] axis_vector_out_TKEEP;
output  [3:0] axis_vector_out_TSTRB;
output  [0:0] axis_vector_out_TLAST;
output  [7:0] stream_control_in_TDATA;
output   stream_control_in_TVALID;
input   stream_control_in_TREADY;
output  [7:0] stream_sigmoid_switch_in_TDATA;
output   stream_sigmoid_switch_in_TVALID;
input   stream_sigmoid_switch_in_TREADY;
output  [15:0] stream_vector_in_len_in_TDATA;
output   stream_vector_in_len_in_TVALID;
input   stream_vector_in_len_in_TREADY;
output  [15:0] stream_vector_out_len_in_TDATA;
output   stream_vector_out_len_in_TVALID;
input   stream_vector_out_len_in_TREADY;
output  [31:0] stream_vector_in_TDATA;
output   stream_vector_in_TVALID;
input   stream_vector_in_TREADY;
output  [31:0] stream_weight_in_TDATA;
output   stream_weight_in_TVALID;
input   stream_weight_in_TREADY;
output  [47:0] stream_bias_in_TDATA;
output   stream_bias_in_TVALID;
input   stream_bias_in_TREADY;
input  [127:0] stream_vector_out_TDATA;
input   stream_vector_out_TVALID;
output   stream_vector_out_TREADY;

 reg    ap_rst_n_inv;
reg    axis_control_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_nbreadreq_fu_252_p6;
reg    axis_sigmoid_switch_in_TDATA_blk_n;
wire   [0:0] tmp_1_nbreadreq_fu_278_p6;
reg    axis_vector_in_len_in_TDATA_blk_n;
wire   [0:0] tmp_2_nbreadreq_fu_304_p6;
reg    axis_vector_out_len_in_TDATA_blk_n;
wire   [0:0] tmp_3_nbreadreq_fu_330_p6;
reg    axis_vector_in_TDATA_blk_n;
wire   [0:0] tmp_4_nbreadreq_fu_356_p6;
reg    axis_weight_in_TDATA_blk_n;
wire   [0:0] tmp_5_nbreadreq_fu_382_p6;
reg    axis_bias_in_TDATA_blk_n;
wire   [0:0] tmp_7_nbreadreq_fu_408_p6;
reg    axis_vector_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] tmp_6_reg_1418;
reg   [0:0] tmp_6_reg_1418_pp0_iter2_reg;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_6_reg_1418_pp0_iter3_reg;
reg    stream_control_in_TDATA_blk_n;
reg   [0:0] tmp_reg_1340;
reg   [0:0] tmp_reg_1340_pp0_iter2_reg;
reg   [0:0] tmp_reg_1340_pp0_iter3_reg;
reg    stream_sigmoid_switch_in_TDATA_blk_n;
reg   [0:0] tmp_1_reg_1349;
reg   [0:0] tmp_1_reg_1349_pp0_iter2_reg;
reg   [0:0] tmp_1_reg_1349_pp0_iter3_reg;
reg    stream_vector_in_len_in_TDATA_blk_n;
reg   [0:0] tmp_2_reg_1358;
reg   [0:0] tmp_2_reg_1358_pp0_iter2_reg;
reg   [0:0] tmp_2_reg_1358_pp0_iter3_reg;
reg    stream_vector_out_len_in_TDATA_blk_n;
reg   [0:0] tmp_3_reg_1367;
reg   [0:0] tmp_3_reg_1367_pp0_iter2_reg;
reg   [0:0] tmp_3_reg_1367_pp0_iter3_reg;
reg    stream_vector_in_TDATA_blk_n;
reg   [0:0] tmp_4_reg_1376;
reg   [0:0] tmp_4_reg_1376_pp0_iter2_reg;
reg   [0:0] tmp_4_reg_1376_pp0_iter3_reg;
reg    stream_weight_in_TDATA_blk_n;
reg   [0:0] tmp_5_reg_1390;
reg   [0:0] tmp_5_reg_1390_pp0_iter2_reg;
reg   [0:0] tmp_5_reg_1390_pp0_iter3_reg;
reg    stream_bias_in_TDATA_blk_n;
reg   [0:0] tmp_7_reg_1404;
reg   [0:0] tmp_7_reg_1404_pp0_iter2_reg;
reg   [0:0] tmp_7_reg_1404_pp0_iter3_reg;
reg    stream_vector_out_TDATA_blk_n;
wire   [0:0] tmp_6_nbreadreq_fu_434_p3;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
wire    regslice_both_axis_vector_out_V_data_V_U_apdone_blk;
wire    regslice_both_stream_control_in_U_apdone_blk;
wire    regslice_both_stream_sigmoid_switch_in_U_apdone_blk;
wire    regslice_both_stream_vector_in_len_in_U_apdone_blk;
wire    regslice_both_stream_vector_out_len_in_U_apdone_blk;
wire    regslice_both_stream_vector_in_U_apdone_blk;
wire    regslice_both_stream_weight_in_U_apdone_blk;
wire    regslice_both_stream_bias_in_U_apdone_blk;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_1340_pp0_iter1_reg;
reg   [7:0] tmp_data_V_reg_1344;
reg   [7:0] tmp_data_V_reg_1344_pp0_iter1_reg;
reg   [7:0] tmp_data_V_reg_1344_pp0_iter2_reg;
reg   [0:0] tmp_1_reg_1349_pp0_iter1_reg;
reg   [7:0] tmp_data_V_1_reg_1353;
reg   [7:0] tmp_data_V_1_reg_1353_pp0_iter1_reg;
reg   [7:0] tmp_data_V_1_reg_1353_pp0_iter2_reg;
reg   [0:0] tmp_2_reg_1358_pp0_iter1_reg;
wire   [11:0] trunc_ln186_fu_533_p1;
reg   [11:0] trunc_ln186_reg_1362;
reg   [11:0] trunc_ln186_reg_1362_pp0_iter1_reg;
reg   [11:0] trunc_ln186_reg_1362_pp0_iter2_reg;
reg   [0:0] tmp_3_reg_1367_pp0_iter1_reg;
wire   [11:0] trunc_ln186_1_fu_541_p1;
reg   [11:0] trunc_ln186_1_reg_1371;
reg   [11:0] trunc_ln186_1_reg_1371_pp0_iter1_reg;
reg   [11:0] trunc_ln186_1_reg_1371_pp0_iter2_reg;
reg   [0:0] tmp_4_reg_1376_pp0_iter1_reg;
reg   [15:0] tmp_data_V_4_reg_1380;
reg   [15:0] tmp_data_V_4_reg_1380_pp0_iter1_reg;
reg   [15:0] tmp_data_V_4_reg_1380_pp0_iter2_reg;
reg   [0:0] tmp_last_V_1_reg_1385;
reg   [0:0] tmp_last_V_1_reg_1385_pp0_iter1_reg;
reg   [0:0] tmp_last_V_1_reg_1385_pp0_iter2_reg;
reg   [0:0] tmp_5_reg_1390_pp0_iter1_reg;
reg   [31:0] p_s_reg_1394;
reg   [31:0] p_s_reg_1394_pp0_iter1_reg;
reg   [31:0] p_s_reg_1394_pp0_iter2_reg;
reg   [0:0] tmp_7_reg_1404_pp0_iter1_reg;
reg   [31:0] p_2_reg_1408;
reg   [31:0] p_2_reg_1408_pp0_iter1_reg;
reg   [31:0] p_2_reg_1408_pp0_iter2_reg;
reg   [0:0] tmp_6_reg_1418_pp0_iter1_reg;
reg   [0:0] stream_data_h_axis_last_reg_1422;
reg   [0:0] stream_data_h_axis_last_reg_1422_pp0_iter1_reg;
reg   [0:0] stream_data_h_axis_last_reg_1422_pp0_iter2_reg;
wire   [0:0] icmp_ln1090_fu_583_p2;
reg   [0:0] icmp_ln1090_reg_1427;
reg   [0:0] icmp_ln1090_reg_1427_pp0_iter1_reg;
reg   [0:0] icmp_ln1090_reg_1427_pp0_iter2_reg;
wire   [0:0] p_Result_15_fu_589_p3;
reg   [0:0] p_Result_15_reg_1432;
reg   [0:0] p_Result_15_reg_1432_pp0_iter1_reg;
reg   [0:0] p_Result_15_reg_1432_pp0_iter2_reg;
wire   [47:0] tmp_V_2_fu_603_p3;
reg   [47:0] tmp_V_2_reg_1437;
reg   [47:0] tmp_V_2_reg_1437_pp0_iter1_reg;
wire   [31:0] l_fu_641_p1;
reg   [31:0] l_reg_1445;
wire   [7:0] trunc_ln1098_fu_645_p1;
reg   [7:0] trunc_ln1098_reg_1450;
reg   [7:0] trunc_ln1098_reg_1450_pp0_iter1_reg;
reg   [7:0] trunc_ln1098_reg_1450_pp0_iter2_reg;
reg   [0:0] p_Result_11_reg_1455;
wire   [51:0] trunc_ln554_fu_679_p1;
reg   [51:0] trunc_ln554_reg_1460;
wire   [0:0] icmp_ln560_fu_683_p2;
reg   [0:0] icmp_ln560_reg_1465;
reg   [0:0] icmp_ln560_reg_1465_pp0_iter2_reg;
wire   [11:0] F2_fu_689_p2;
reg   [11:0] F2_reg_1472;
reg   [0:0] p_Result_13_reg_1480;
wire   [51:0] trunc_ln554_1_fu_725_p1;
reg   [51:0] trunc_ln554_1_reg_1485;
wire   [0:0] icmp_ln560_1_fu_729_p2;
reg   [0:0] icmp_ln560_1_reg_1490;
reg   [0:0] icmp_ln560_1_reg_1490_pp0_iter2_reg;
wire   [11:0] F2_1_fu_735_p2;
reg   [11:0] F2_1_reg_1497;
wire   [0:0] icmp_ln570_1_fu_741_p2;
reg   [0:0] icmp_ln570_1_reg_1504;
wire   [31:0] sub_ln1099_fu_747_p2;
reg   [31:0] sub_ln1099_reg_1510;
wire   [1:0] or_ln_fu_844_p3;
reg   [1:0] or_ln_reg_1516;
wire   [0:0] icmp_ln1109_fu_852_p2;
reg   [0:0] icmp_ln1109_reg_1521;
wire   [53:0] man_V_2_fu_875_p3;
reg   [53:0] man_V_2_reg_1526;
wire  signed [31:0] sext_ln570_fu_905_p1;
reg  signed [31:0] sext_ln570_reg_1531;
wire   [0:0] icmp_ln574_fu_918_p2;
reg   [0:0] icmp_ln574_reg_1536;
wire   [24:0] select_ln571_fu_959_p3;
reg   [24:0] select_ln571_reg_1541;
wire   [0:0] and_ln570_fu_978_p2;
reg   [0:0] and_ln570_reg_1546;
wire   [53:0] man_V_5_fu_1001_p3;
reg   [53:0] man_V_5_reg_1551;
wire   [0:0] icmp_ln574_1_fu_1034_p2;
reg   [0:0] icmp_ln574_1_reg_1556;
wire  signed [31:0] sext_ln575_fu_1040_p1;
reg  signed [31:0] sext_ln575_reg_1561;
wire   [47:0] select_ln571_1_fu_1079_p3;
reg   [47:0] select_ln571_1_reg_1566;
wire   [0:0] and_ln570_1_fu_1098_p2;
reg   [0:0] and_ln570_1_reg_1571;
reg   [47:0] m_4_reg_1576;
reg   [0:0] p_Result_9_reg_1581;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_515_p0;
wire   [31:0] grp_fu_518_p0;
wire   [47:0] stream_data_h_data_V_fu_571_p1;
wire   [47:0] tmp_V_fu_597_p2;
reg   [47:0] p_Result_s_fu_611_p4;
wire   [48:0] p_Result_16_fu_621_p3;
wire  signed [63:0] sext_ln1204_fu_629_p1;
reg   [63:0] tmp_9_fu_633_p3;
wire   [63:0] grp_fu_515_p1;
wire   [63:0] ireg_fu_649_p1;
wire   [10:0] exp_tmp_fu_665_p4;
wire   [62:0] trunc_ln544_fu_653_p1;
wire   [11:0] zext_ln455_fu_675_p1;
wire   [63:0] grp_fu_518_p1;
wire   [63:0] ireg_1_fu_695_p1;
wire   [10:0] exp_tmp_1_fu_711_p4;
wire   [62:0] trunc_ln544_1_fu_699_p1;
wire   [11:0] zext_ln455_1_fu_721_p1;
wire   [31:0] lsb_index_fu_752_p2;
wire   [30:0] tmp_18_fu_758_p4;
wire   [5:0] trunc_ln1102_fu_774_p1;
wire   [5:0] sub_ln1102_fu_778_p2;
wire   [47:0] zext_ln1102_fu_784_p1;
wire   [47:0] lshr_ln1102_fu_788_p2;
wire   [47:0] p_Result_8_fu_794_p2;
wire   [0:0] icmp_ln1101_fu_768_p2;
wire   [0:0] icmp_ln1102_fu_799_p2;
wire   [0:0] tmp_19_fu_811_p3;
wire   [0:0] p_Result_3_fu_825_p3;
wire   [0:0] xor_ln1104_fu_819_p2;
wire   [0:0] and_ln1104_fu_832_p2;
wire   [0:0] a_fu_805_p2;
wire   [0:0] or_ln1104_fu_838_p2;
wire   [52:0] p_Result_12_fu_858_p3;
wire   [53:0] zext_ln558_fu_865_p1;
wire   [53:0] man_V_1_fu_869_p2;
wire   [0:0] icmp_ln570_fu_882_p2;
wire   [11:0] add_ln570_fu_887_p2;
wire   [11:0] sub_ln570_fu_892_p2;
wire  signed [11:0] sh_amt_fu_897_p3;
wire   [24:0] trunc_ln572_fu_914_p1;
wire   [24:0] sext_ln570cast_fu_930_p1;
wire   [0:0] icmp_ln592_fu_924_p2;
wire   [24:0] shl_ln593_fu_934_p2;
wire   [0:0] icmp_ln571_fu_909_p2;
wire   [0:0] xor_ln560_fu_948_p2;
wire   [0:0] and_ln571_fu_953_p2;
wire   [24:0] select_ln592_fu_940_p3;
wire   [0:0] or_ln571_fu_967_p2;
wire   [0:0] xor_ln571_fu_972_p2;
wire   [52:0] p_Result_14_fu_984_p3;
wire   [53:0] zext_ln558_1_fu_991_p1;
wire   [53:0] man_V_4_fu_995_p2;
wire   [11:0] add_ln570_1_fu_1008_p2;
wire   [11:0] sub_ln570_1_fu_1013_p2;
wire  signed [11:0] sh_amt_1_fu_1018_p3;
wire   [47:0] trunc_ln572_1_fu_1030_p1;
wire   [47:0] zext_ln593_fu_1050_p1;
wire   [0:0] icmp_ln592_1_fu_1044_p2;
wire   [47:0] shl_ln593_1_fu_1054_p2;
wire   [0:0] icmp_ln571_1_fu_1025_p2;
wire   [0:0] xor_ln560_1_fu_1068_p2;
wire   [0:0] and_ln571_1_fu_1073_p2;
wire   [47:0] select_ln592_1_fu_1060_p3;
wire   [0:0] or_ln571_1_fu_1087_p2;
wire   [0:0] xor_ln571_1_fu_1092_p2;
wire   [31:0] add_ln1109_fu_1103_p2;
wire   [47:0] zext_ln1109_fu_1108_p1;
wire   [31:0] sub_ln1110_fu_1117_p2;
wire   [47:0] zext_ln1110_fu_1122_p1;
wire   [47:0] lshr_ln1109_fu_1112_p2;
wire   [47:0] shl_ln1110_fu_1126_p2;
wire   [47:0] m_fu_1131_p3;
wire   [48:0] zext_ln1106_fu_1138_p1;
wire   [48:0] zext_ln1116_fu_1142_p1;
wire   [48:0] m_1_fu_1145_p2;
wire   [16:0] tmp_s_fu_1177_p3;
wire   [53:0] zext_ln575_fu_1188_p1;
wire   [53:0] ashr_ln575_fu_1191_p2;
wire   [0:0] tmp_12_fu_1200_p3;
wire   [24:0] trunc_ln575_fu_1196_p1;
wire   [24:0] select_ln577_fu_1207_p3;
wire   [24:0] select_ln574_fu_1215_p3;
wire   [24:0] select_ln570_fu_1222_p3;
wire   [24:0] select_ln560_fu_1228_p3;
wire   [53:0] zext_ln575_1_fu_1240_p1;
wire   [53:0] ashr_ln575_1_fu_1243_p2;
wire   [0:0] tmp_15_fu_1252_p3;
wire   [47:0] trunc_ln575_1_fu_1248_p1;
wire   [47:0] select_ln577_1_fu_1259_p3;
wire   [47:0] select_ln574_1_fu_1267_p3;
wire   [47:0] select_ln570_2_fu_1274_p3;
wire   [7:0] sub_ln1119_fu_1298_p2;
wire   [7:0] select_ln1098_fu_1291_p3;
wire   [7:0] add_ln1124_fu_1303_p2;
wire   [63:0] zext_ln1106_1_fu_1288_p1;
wire   [8:0] tmp_8_fu_1309_p3;
wire   [63:0] p_Result_17_fu_1316_p5;
wire   [31:0] LD_2_fu_1328_p1;
reg    grp_fu_515_ce;
reg    grp_fu_518_ce;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_axis_control_in_V_data_V_U_apdone_blk;
wire   [7:0] axis_control_in_TDATA_int_regslice;
wire    axis_control_in_TVALID_int_regslice;
reg    axis_control_in_TREADY_int_regslice;
wire    regslice_both_axis_control_in_V_data_V_U_ack_in;
wire    regslice_both_axis_control_in_V_keep_V_U_apdone_blk;
wire   [0:0] axis_control_in_TKEEP_int_regslice;
wire    regslice_both_axis_control_in_V_keep_V_U_vld_out;
wire    regslice_both_axis_control_in_V_keep_V_U_ack_in;
wire    regslice_both_axis_control_in_V_strb_V_U_apdone_blk;
wire   [0:0] axis_control_in_TSTRB_int_regslice;
wire    regslice_both_axis_control_in_V_strb_V_U_vld_out;
wire    regslice_both_axis_control_in_V_strb_V_U_ack_in;
wire    regslice_both_axis_control_in_V_last_V_U_apdone_blk;
wire   [0:0] axis_control_in_TLAST_int_regslice;
wire    regslice_both_axis_control_in_V_last_V_U_vld_out;
wire    regslice_both_axis_control_in_V_last_V_U_ack_in;
wire    regslice_both_axis_sigmoid_switch_in_V_data_V_U_apdone_blk;
wire   [7:0] axis_sigmoid_switch_in_TDATA_int_regslice;
wire    axis_sigmoid_switch_in_TVALID_int_regslice;
reg    axis_sigmoid_switch_in_TREADY_int_regslice;
wire    regslice_both_axis_sigmoid_switch_in_V_data_V_U_ack_in;
wire    regslice_both_axis_sigmoid_switch_in_V_keep_V_U_apdone_blk;
wire   [0:0] axis_sigmoid_switch_in_TKEEP_int_regslice;
wire    regslice_both_axis_sigmoid_switch_in_V_keep_V_U_vld_out;
wire    regslice_both_axis_sigmoid_switch_in_V_keep_V_U_ack_in;
wire    regslice_both_axis_sigmoid_switch_in_V_strb_V_U_apdone_blk;
wire   [0:0] axis_sigmoid_switch_in_TSTRB_int_regslice;
wire    regslice_both_axis_sigmoid_switch_in_V_strb_V_U_vld_out;
wire    regslice_both_axis_sigmoid_switch_in_V_strb_V_U_ack_in;
wire    regslice_both_axis_sigmoid_switch_in_V_last_V_U_apdone_blk;
wire   [0:0] axis_sigmoid_switch_in_TLAST_int_regslice;
wire    regslice_both_axis_sigmoid_switch_in_V_last_V_U_vld_out;
wire    regslice_both_axis_sigmoid_switch_in_V_last_V_U_ack_in;
wire    regslice_both_axis_vector_in_len_in_V_data_V_U_apdone_blk;
wire   [15:0] axis_vector_in_len_in_TDATA_int_regslice;
wire    axis_vector_in_len_in_TVALID_int_regslice;
reg    axis_vector_in_len_in_TREADY_int_regslice;
wire    regslice_both_axis_vector_in_len_in_V_data_V_U_ack_in;
wire    regslice_both_axis_vector_in_len_in_V_keep_V_U_apdone_blk;
wire   [1:0] axis_vector_in_len_in_TKEEP_int_regslice;
wire    regslice_both_axis_vector_in_len_in_V_keep_V_U_vld_out;
wire    regslice_both_axis_vector_in_len_in_V_keep_V_U_ack_in;
wire    regslice_both_axis_vector_in_len_in_V_strb_V_U_apdone_blk;
wire   [1:0] axis_vector_in_len_in_TSTRB_int_regslice;
wire    regslice_both_axis_vector_in_len_in_V_strb_V_U_vld_out;
wire    regslice_both_axis_vector_in_len_in_V_strb_V_U_ack_in;
wire    regslice_both_axis_vector_in_len_in_V_last_V_U_apdone_blk;
wire   [0:0] axis_vector_in_len_in_TLAST_int_regslice;
wire    regslice_both_axis_vector_in_len_in_V_last_V_U_vld_out;
wire    regslice_both_axis_vector_in_len_in_V_last_V_U_ack_in;
wire    regslice_both_axis_vector_out_len_in_V_data_V_U_apdone_blk;
wire   [15:0] axis_vector_out_len_in_TDATA_int_regslice;
wire    axis_vector_out_len_in_TVALID_int_regslice;
reg    axis_vector_out_len_in_TREADY_int_regslice;
wire    regslice_both_axis_vector_out_len_in_V_data_V_U_ack_in;
wire    regslice_both_axis_vector_out_len_in_V_keep_V_U_apdone_blk;
wire   [1:0] axis_vector_out_len_in_TKEEP_int_regslice;
wire    regslice_both_axis_vector_out_len_in_V_keep_V_U_vld_out;
wire    regslice_both_axis_vector_out_len_in_V_keep_V_U_ack_in;
wire    regslice_both_axis_vector_out_len_in_V_strb_V_U_apdone_blk;
wire   [1:0] axis_vector_out_len_in_TSTRB_int_regslice;
wire    regslice_both_axis_vector_out_len_in_V_strb_V_U_vld_out;
wire    regslice_both_axis_vector_out_len_in_V_strb_V_U_ack_in;
wire    regslice_both_axis_vector_out_len_in_V_last_V_U_apdone_blk;
wire   [0:0] axis_vector_out_len_in_TLAST_int_regslice;
wire    regslice_both_axis_vector_out_len_in_V_last_V_U_vld_out;
wire    regslice_both_axis_vector_out_len_in_V_last_V_U_ack_in;
wire    regslice_both_axis_vector_in_V_data_V_U_apdone_blk;
wire   [15:0] axis_vector_in_TDATA_int_regslice;
wire    axis_vector_in_TVALID_int_regslice;
reg    axis_vector_in_TREADY_int_regslice;
wire    regslice_both_axis_vector_in_V_data_V_U_ack_in;
wire    regslice_both_axis_vector_in_V_keep_V_U_apdone_blk;
wire   [1:0] axis_vector_in_TKEEP_int_regslice;
wire    regslice_both_axis_vector_in_V_keep_V_U_vld_out;
wire    regslice_both_axis_vector_in_V_keep_V_U_ack_in;
wire    regslice_both_axis_vector_in_V_strb_V_U_apdone_blk;
wire   [1:0] axis_vector_in_TSTRB_int_regslice;
wire    regslice_both_axis_vector_in_V_strb_V_U_vld_out;
wire    regslice_both_axis_vector_in_V_strb_V_U_ack_in;
wire    regslice_both_axis_vector_in_V_last_V_U_apdone_blk;
wire   [0:0] axis_vector_in_TLAST_int_regslice;
wire    regslice_both_axis_vector_in_V_last_V_U_vld_out;
wire    regslice_both_axis_vector_in_V_last_V_U_ack_in;
wire    regslice_both_axis_weight_in_V_data_V_U_apdone_blk;
wire   [31:0] axis_weight_in_TDATA_int_regslice;
wire    axis_weight_in_TVALID_int_regslice;
reg    axis_weight_in_TREADY_int_regslice;
wire    regslice_both_axis_weight_in_V_data_V_U_ack_in;
wire    regslice_both_axis_weight_in_V_keep_V_U_apdone_blk;
wire   [3:0] axis_weight_in_TKEEP_int_regslice;
wire    regslice_both_axis_weight_in_V_keep_V_U_vld_out;
wire    regslice_both_axis_weight_in_V_keep_V_U_ack_in;
wire    regslice_both_axis_weight_in_V_strb_V_U_apdone_blk;
wire   [3:0] axis_weight_in_TSTRB_int_regslice;
wire    regslice_both_axis_weight_in_V_strb_V_U_vld_out;
wire    regslice_both_axis_weight_in_V_strb_V_U_ack_in;
wire    regslice_both_axis_weight_in_V_last_V_U_apdone_blk;
wire   [0:0] axis_weight_in_TLAST_int_regslice;
wire    regslice_both_axis_weight_in_V_last_V_U_vld_out;
wire    regslice_both_axis_weight_in_V_last_V_U_ack_in;
wire    regslice_both_axis_bias_in_V_data_V_U_apdone_blk;
wire   [31:0] axis_bias_in_TDATA_int_regslice;
wire    axis_bias_in_TVALID_int_regslice;
reg    axis_bias_in_TREADY_int_regslice;
wire    regslice_both_axis_bias_in_V_data_V_U_ack_in;
wire    regslice_both_axis_bias_in_V_keep_V_U_apdone_blk;
wire   [3:0] axis_bias_in_TKEEP_int_regslice;
wire    regslice_both_axis_bias_in_V_keep_V_U_vld_out;
wire    regslice_both_axis_bias_in_V_keep_V_U_ack_in;
wire    regslice_both_axis_bias_in_V_strb_V_U_apdone_blk;
wire   [3:0] axis_bias_in_TSTRB_int_regslice;
wire    regslice_both_axis_bias_in_V_strb_V_U_vld_out;
wire    regslice_both_axis_bias_in_V_strb_V_U_ack_in;
wire    regslice_both_axis_bias_in_V_last_V_U_apdone_blk;
wire   [0:0] axis_bias_in_TLAST_int_regslice;
wire    regslice_both_axis_bias_in_V_last_V_U_vld_out;
wire    regslice_both_axis_bias_in_V_last_V_U_ack_in;
wire   [31:0] axis_vector_out_TDATA_int_regslice;
reg    axis_vector_out_TVALID_int_regslice;
wire    axis_vector_out_TREADY_int_regslice;
wire    regslice_both_axis_vector_out_V_data_V_U_vld_out;
wire    regslice_both_axis_vector_out_V_keep_V_U_apdone_blk;
wire    regslice_both_axis_vector_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_axis_vector_out_V_keep_V_U_vld_out;
wire    regslice_both_axis_vector_out_V_strb_V_U_apdone_blk;
wire    regslice_both_axis_vector_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_axis_vector_out_V_strb_V_U_vld_out;
wire    regslice_both_axis_vector_out_V_last_V_U_apdone_blk;
wire    regslice_both_axis_vector_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_axis_vector_out_V_last_V_U_vld_out;
reg    stream_control_in_TVALID_int_regslice;
wire    stream_control_in_TREADY_int_regslice;
wire    regslice_both_stream_control_in_U_vld_out;
reg    stream_sigmoid_switch_in_TVALID_int_regslice;
wire    stream_sigmoid_switch_in_TREADY_int_regslice;
wire    regslice_both_stream_sigmoid_switch_in_U_vld_out;
wire   [15:0] stream_vector_in_len_in_TDATA_int_regslice;
reg    stream_vector_in_len_in_TVALID_int_regslice;
wire    stream_vector_in_len_in_TREADY_int_regslice;
wire    regslice_both_stream_vector_in_len_in_U_vld_out;
wire   [15:0] stream_vector_out_len_in_TDATA_int_regslice;
reg    stream_vector_out_len_in_TVALID_int_regslice;
wire    stream_vector_out_len_in_TREADY_int_regslice;
wire    regslice_both_stream_vector_out_len_in_U_vld_out;
wire   [31:0] stream_vector_in_TDATA_int_regslice;
reg    stream_vector_in_TVALID_int_regslice;
wire    stream_vector_in_TREADY_int_regslice;
wire    regslice_both_stream_vector_in_U_vld_out;
wire   [31:0] stream_weight_in_TDATA_int_regslice;
reg    stream_weight_in_TVALID_int_regslice;
wire    stream_weight_in_TREADY_int_regslice;
wire    regslice_both_stream_weight_in_U_vld_out;
wire   [47:0] stream_bias_in_TDATA_int_regslice;
reg    stream_bias_in_TVALID_int_regslice;
wire    stream_bias_in_TREADY_int_regslice;
wire    regslice_both_stream_bias_in_U_vld_out;
wire    regslice_both_stream_vector_out_U_apdone_blk;
wire   [127:0] stream_vector_out_TDATA_int_regslice;
wire    stream_vector_out_TVALID_int_regslice;
reg    stream_vector_out_TREADY_int_regslice;
wire    regslice_both_stream_vector_out_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

RBM_interface_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_515_p0),
    .ce(grp_fu_515_ce),
    .dout(grp_fu_515_p1)
);

RBM_interface_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_518_p0),
    .ce(grp_fu_518_ce),
    .dout(grp_fu_518_p1)
);

RBM_interface_regslice_both #(
    .DataWidth( 8 ))
regslice_both_axis_control_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_control_in_TDATA),
    .vld_in(axis_control_in_TVALID),
    .ack_in(regslice_both_axis_control_in_V_data_V_U_ack_in),
    .data_out(axis_control_in_TDATA_int_regslice),
    .vld_out(axis_control_in_TVALID_int_regslice),
    .ack_out(axis_control_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_control_in_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_control_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_control_in_TKEEP),
    .vld_in(axis_control_in_TVALID),
    .ack_in(regslice_both_axis_control_in_V_keep_V_U_ack_in),
    .data_out(axis_control_in_TKEEP_int_regslice),
    .vld_out(regslice_both_axis_control_in_V_keep_V_U_vld_out),
    .ack_out(axis_control_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_control_in_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_control_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_control_in_TSTRB),
    .vld_in(axis_control_in_TVALID),
    .ack_in(regslice_both_axis_control_in_V_strb_V_U_ack_in),
    .data_out(axis_control_in_TSTRB_int_regslice),
    .vld_out(regslice_both_axis_control_in_V_strb_V_U_vld_out),
    .ack_out(axis_control_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_control_in_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_control_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_control_in_TLAST),
    .vld_in(axis_control_in_TVALID),
    .ack_in(regslice_both_axis_control_in_V_last_V_U_ack_in),
    .data_out(axis_control_in_TLAST_int_regslice),
    .vld_out(regslice_both_axis_control_in_V_last_V_U_vld_out),
    .ack_out(axis_control_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_control_in_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 8 ))
regslice_both_axis_sigmoid_switch_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_sigmoid_switch_in_TDATA),
    .vld_in(axis_sigmoid_switch_in_TVALID),
    .ack_in(regslice_both_axis_sigmoid_switch_in_V_data_V_U_ack_in),
    .data_out(axis_sigmoid_switch_in_TDATA_int_regslice),
    .vld_out(axis_sigmoid_switch_in_TVALID_int_regslice),
    .ack_out(axis_sigmoid_switch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_sigmoid_switch_in_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_sigmoid_switch_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_sigmoid_switch_in_TKEEP),
    .vld_in(axis_sigmoid_switch_in_TVALID),
    .ack_in(regslice_both_axis_sigmoid_switch_in_V_keep_V_U_ack_in),
    .data_out(axis_sigmoid_switch_in_TKEEP_int_regslice),
    .vld_out(regslice_both_axis_sigmoid_switch_in_V_keep_V_U_vld_out),
    .ack_out(axis_sigmoid_switch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_sigmoid_switch_in_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_sigmoid_switch_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_sigmoid_switch_in_TSTRB),
    .vld_in(axis_sigmoid_switch_in_TVALID),
    .ack_in(regslice_both_axis_sigmoid_switch_in_V_strb_V_U_ack_in),
    .data_out(axis_sigmoid_switch_in_TSTRB_int_regslice),
    .vld_out(regslice_both_axis_sigmoid_switch_in_V_strb_V_U_vld_out),
    .ack_out(axis_sigmoid_switch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_sigmoid_switch_in_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_sigmoid_switch_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_sigmoid_switch_in_TLAST),
    .vld_in(axis_sigmoid_switch_in_TVALID),
    .ack_in(regslice_both_axis_sigmoid_switch_in_V_last_V_U_ack_in),
    .data_out(axis_sigmoid_switch_in_TLAST_int_regslice),
    .vld_out(regslice_both_axis_sigmoid_switch_in_V_last_V_U_vld_out),
    .ack_out(axis_sigmoid_switch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_sigmoid_switch_in_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 16 ))
regslice_both_axis_vector_in_len_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_len_in_TDATA),
    .vld_in(axis_vector_in_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_len_in_V_data_V_U_ack_in),
    .data_out(axis_vector_in_len_in_TDATA_int_regslice),
    .vld_out(axis_vector_in_len_in_TVALID_int_regslice),
    .ack_out(axis_vector_in_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_len_in_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 2 ))
regslice_both_axis_vector_in_len_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_len_in_TKEEP),
    .vld_in(axis_vector_in_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_len_in_V_keep_V_U_ack_in),
    .data_out(axis_vector_in_len_in_TKEEP_int_regslice),
    .vld_out(regslice_both_axis_vector_in_len_in_V_keep_V_U_vld_out),
    .ack_out(axis_vector_in_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_len_in_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 2 ))
regslice_both_axis_vector_in_len_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_len_in_TSTRB),
    .vld_in(axis_vector_in_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_len_in_V_strb_V_U_ack_in),
    .data_out(axis_vector_in_len_in_TSTRB_int_regslice),
    .vld_out(regslice_both_axis_vector_in_len_in_V_strb_V_U_vld_out),
    .ack_out(axis_vector_in_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_len_in_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_vector_in_len_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_len_in_TLAST),
    .vld_in(axis_vector_in_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_len_in_V_last_V_U_ack_in),
    .data_out(axis_vector_in_len_in_TLAST_int_regslice),
    .vld_out(regslice_both_axis_vector_in_len_in_V_last_V_U_vld_out),
    .ack_out(axis_vector_in_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_len_in_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 16 ))
regslice_both_axis_vector_out_len_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_out_len_in_TDATA),
    .vld_in(axis_vector_out_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_out_len_in_V_data_V_U_ack_in),
    .data_out(axis_vector_out_len_in_TDATA_int_regslice),
    .vld_out(axis_vector_out_len_in_TVALID_int_regslice),
    .ack_out(axis_vector_out_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_out_len_in_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 2 ))
regslice_both_axis_vector_out_len_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_out_len_in_TKEEP),
    .vld_in(axis_vector_out_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_out_len_in_V_keep_V_U_ack_in),
    .data_out(axis_vector_out_len_in_TKEEP_int_regslice),
    .vld_out(regslice_both_axis_vector_out_len_in_V_keep_V_U_vld_out),
    .ack_out(axis_vector_out_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_out_len_in_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 2 ))
regslice_both_axis_vector_out_len_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_out_len_in_TSTRB),
    .vld_in(axis_vector_out_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_out_len_in_V_strb_V_U_ack_in),
    .data_out(axis_vector_out_len_in_TSTRB_int_regslice),
    .vld_out(regslice_both_axis_vector_out_len_in_V_strb_V_U_vld_out),
    .ack_out(axis_vector_out_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_out_len_in_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_vector_out_len_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_out_len_in_TLAST),
    .vld_in(axis_vector_out_len_in_TVALID),
    .ack_in(regslice_both_axis_vector_out_len_in_V_last_V_U_ack_in),
    .data_out(axis_vector_out_len_in_TLAST_int_regslice),
    .vld_out(regslice_both_axis_vector_out_len_in_V_last_V_U_vld_out),
    .ack_out(axis_vector_out_len_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_out_len_in_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 16 ))
regslice_both_axis_vector_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_TDATA),
    .vld_in(axis_vector_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_V_data_V_U_ack_in),
    .data_out(axis_vector_in_TDATA_int_regslice),
    .vld_out(axis_vector_in_TVALID_int_regslice),
    .ack_out(axis_vector_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 2 ))
regslice_both_axis_vector_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_TKEEP),
    .vld_in(axis_vector_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_V_keep_V_U_ack_in),
    .data_out(axis_vector_in_TKEEP_int_regslice),
    .vld_out(regslice_both_axis_vector_in_V_keep_V_U_vld_out),
    .ack_out(axis_vector_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 2 ))
regslice_both_axis_vector_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_TSTRB),
    .vld_in(axis_vector_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_V_strb_V_U_ack_in),
    .data_out(axis_vector_in_TSTRB_int_regslice),
    .vld_out(regslice_both_axis_vector_in_V_strb_V_U_vld_out),
    .ack_out(axis_vector_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_vector_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_in_TLAST),
    .vld_in(axis_vector_in_TVALID),
    .ack_in(regslice_both_axis_vector_in_V_last_V_U_ack_in),
    .data_out(axis_vector_in_TLAST_int_regslice),
    .vld_out(regslice_both_axis_vector_in_V_last_V_U_vld_out),
    .ack_out(axis_vector_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_vector_in_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 32 ))
regslice_both_axis_weight_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_weight_in_TDATA),
    .vld_in(axis_weight_in_TVALID),
    .ack_in(regslice_both_axis_weight_in_V_data_V_U_ack_in),
    .data_out(axis_weight_in_TDATA_int_regslice),
    .vld_out(axis_weight_in_TVALID_int_regslice),
    .ack_out(axis_weight_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_weight_in_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 4 ))
regslice_both_axis_weight_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_weight_in_TKEEP),
    .vld_in(axis_weight_in_TVALID),
    .ack_in(regslice_both_axis_weight_in_V_keep_V_U_ack_in),
    .data_out(axis_weight_in_TKEEP_int_regslice),
    .vld_out(regslice_both_axis_weight_in_V_keep_V_U_vld_out),
    .ack_out(axis_weight_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_weight_in_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 4 ))
regslice_both_axis_weight_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_weight_in_TSTRB),
    .vld_in(axis_weight_in_TVALID),
    .ack_in(regslice_both_axis_weight_in_V_strb_V_U_ack_in),
    .data_out(axis_weight_in_TSTRB_int_regslice),
    .vld_out(regslice_both_axis_weight_in_V_strb_V_U_vld_out),
    .ack_out(axis_weight_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_weight_in_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_weight_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_weight_in_TLAST),
    .vld_in(axis_weight_in_TVALID),
    .ack_in(regslice_both_axis_weight_in_V_last_V_U_ack_in),
    .data_out(axis_weight_in_TLAST_int_regslice),
    .vld_out(regslice_both_axis_weight_in_V_last_V_U_vld_out),
    .ack_out(axis_weight_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_weight_in_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 32 ))
regslice_both_axis_bias_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_bias_in_TDATA),
    .vld_in(axis_bias_in_TVALID),
    .ack_in(regslice_both_axis_bias_in_V_data_V_U_ack_in),
    .data_out(axis_bias_in_TDATA_int_regslice),
    .vld_out(axis_bias_in_TVALID_int_regslice),
    .ack_out(axis_bias_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_bias_in_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 4 ))
regslice_both_axis_bias_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_bias_in_TKEEP),
    .vld_in(axis_bias_in_TVALID),
    .ack_in(regslice_both_axis_bias_in_V_keep_V_U_ack_in),
    .data_out(axis_bias_in_TKEEP_int_regslice),
    .vld_out(regslice_both_axis_bias_in_V_keep_V_U_vld_out),
    .ack_out(axis_bias_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_bias_in_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 4 ))
regslice_both_axis_bias_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_bias_in_TSTRB),
    .vld_in(axis_bias_in_TVALID),
    .ack_in(regslice_both_axis_bias_in_V_strb_V_U_ack_in),
    .data_out(axis_bias_in_TSTRB_int_regslice),
    .vld_out(regslice_both_axis_bias_in_V_strb_V_U_vld_out),
    .ack_out(axis_bias_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_bias_in_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_bias_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_bias_in_TLAST),
    .vld_in(axis_bias_in_TVALID),
    .ack_in(regslice_both_axis_bias_in_V_last_V_U_ack_in),
    .data_out(axis_bias_in_TLAST_int_regslice),
    .vld_out(regslice_both_axis_bias_in_V_last_V_U_vld_out),
    .ack_out(axis_bias_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_axis_bias_in_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 32 ))
regslice_both_axis_vector_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axis_vector_out_TDATA_int_regslice),
    .vld_in(axis_vector_out_TVALID_int_regslice),
    .ack_in(axis_vector_out_TREADY_int_regslice),
    .data_out(axis_vector_out_TDATA),
    .vld_out(regslice_both_axis_vector_out_V_data_V_U_vld_out),
    .ack_out(axis_vector_out_TREADY),
    .apdone_blk(regslice_both_axis_vector_out_V_data_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 4 ))
regslice_both_axis_vector_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(axis_vector_out_TVALID_int_regslice),
    .ack_in(regslice_both_axis_vector_out_V_keep_V_U_ack_in_dummy),
    .data_out(axis_vector_out_TKEEP),
    .vld_out(regslice_both_axis_vector_out_V_keep_V_U_vld_out),
    .ack_out(axis_vector_out_TREADY),
    .apdone_blk(regslice_both_axis_vector_out_V_keep_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 4 ))
regslice_both_axis_vector_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(axis_vector_out_TVALID_int_regslice),
    .ack_in(regslice_both_axis_vector_out_V_strb_V_U_ack_in_dummy),
    .data_out(axis_vector_out_TSTRB),
    .vld_out(regslice_both_axis_vector_out_V_strb_V_U_vld_out),
    .ack_out(axis_vector_out_TREADY),
    .apdone_blk(regslice_both_axis_vector_out_V_strb_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 1 ))
regslice_both_axis_vector_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_data_h_axis_last_reg_1422_pp0_iter2_reg),
    .vld_in(axis_vector_out_TVALID_int_regslice),
    .ack_in(regslice_both_axis_vector_out_V_last_V_U_ack_in_dummy),
    .data_out(axis_vector_out_TLAST),
    .vld_out(regslice_both_axis_vector_out_V_last_V_U_vld_out),
    .ack_out(axis_vector_out_TREADY),
    .apdone_blk(regslice_both_axis_vector_out_V_last_V_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 8 ))
regslice_both_stream_control_in_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_data_V_reg_1344_pp0_iter2_reg),
    .vld_in(stream_control_in_TVALID_int_regslice),
    .ack_in(stream_control_in_TREADY_int_regslice),
    .data_out(stream_control_in_TDATA),
    .vld_out(regslice_both_stream_control_in_U_vld_out),
    .ack_out(stream_control_in_TREADY),
    .apdone_blk(regslice_both_stream_control_in_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 8 ))
regslice_both_stream_sigmoid_switch_in_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_data_V_1_reg_1353_pp0_iter2_reg),
    .vld_in(stream_sigmoid_switch_in_TVALID_int_regslice),
    .ack_in(stream_sigmoid_switch_in_TREADY_int_regslice),
    .data_out(stream_sigmoid_switch_in_TDATA),
    .vld_out(regslice_both_stream_sigmoid_switch_in_U_vld_out),
    .ack_out(stream_sigmoid_switch_in_TREADY),
    .apdone_blk(regslice_both_stream_sigmoid_switch_in_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 16 ))
regslice_both_stream_vector_in_len_in_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_vector_in_len_in_TDATA_int_regslice),
    .vld_in(stream_vector_in_len_in_TVALID_int_regslice),
    .ack_in(stream_vector_in_len_in_TREADY_int_regslice),
    .data_out(stream_vector_in_len_in_TDATA),
    .vld_out(regslice_both_stream_vector_in_len_in_U_vld_out),
    .ack_out(stream_vector_in_len_in_TREADY),
    .apdone_blk(regslice_both_stream_vector_in_len_in_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 16 ))
regslice_both_stream_vector_out_len_in_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_vector_out_len_in_TDATA_int_regslice),
    .vld_in(stream_vector_out_len_in_TVALID_int_regslice),
    .ack_in(stream_vector_out_len_in_TREADY_int_regslice),
    .data_out(stream_vector_out_len_in_TDATA),
    .vld_out(regslice_both_stream_vector_out_len_in_U_vld_out),
    .ack_out(stream_vector_out_len_in_TREADY),
    .apdone_blk(regslice_both_stream_vector_out_len_in_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_vector_in_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_vector_in_TDATA_int_regslice),
    .vld_in(stream_vector_in_TVALID_int_regslice),
    .ack_in(stream_vector_in_TREADY_int_regslice),
    .data_out(stream_vector_in_TDATA),
    .vld_out(regslice_both_stream_vector_in_U_vld_out),
    .ack_out(stream_vector_in_TREADY),
    .apdone_blk(regslice_both_stream_vector_in_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_weight_in_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_weight_in_TDATA_int_regslice),
    .vld_in(stream_weight_in_TVALID_int_regslice),
    .ack_in(stream_weight_in_TREADY_int_regslice),
    .data_out(stream_weight_in_TDATA),
    .vld_out(regslice_both_stream_weight_in_U_vld_out),
    .ack_out(stream_weight_in_TREADY),
    .apdone_blk(regslice_both_stream_weight_in_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 48 ))
regslice_both_stream_bias_in_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_bias_in_TDATA_int_regslice),
    .vld_in(stream_bias_in_TVALID_int_regslice),
    .ack_in(stream_bias_in_TREADY_int_regslice),
    .data_out(stream_bias_in_TDATA),
    .vld_out(regslice_both_stream_bias_in_U_vld_out),
    .ack_out(stream_bias_in_TREADY),
    .apdone_blk(regslice_both_stream_bias_in_U_apdone_blk)
);

RBM_interface_regslice_both #(
    .DataWidth( 128 ))
regslice_both_stream_vector_out_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_vector_out_TDATA),
    .vld_in(stream_vector_out_TVALID),
    .ack_in(regslice_both_stream_vector_out_U_ack_in),
    .data_out(stream_vector_out_TDATA_int_regslice),
    .vld_out(stream_vector_out_TVALID_int_regslice),
    .ack_out(stream_vector_out_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_vector_out_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_reg_1404 == 1'd1))) begin
        F2_1_reg_1497 <= F2_1_fu_735_p2;
        icmp_ln560_1_reg_1490 <= icmp_ln560_1_fu_729_p2;
        icmp_ln570_1_reg_1504 <= icmp_ln570_1_fu_741_p2;
        p_Result_13_reg_1480 <= ireg_1_fu_695_p1[32'd63];
        trunc_ln554_1_reg_1485 <= trunc_ln554_1_fu_725_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_reg_1390 == 1'd1))) begin
        F2_reg_1472 <= F2_fu_689_p2;
        icmp_ln560_reg_1465 <= icmp_ln560_fu_683_p2;
        p_Result_11_reg_1455 <= ireg_fu_649_p1[32'd63];
        trunc_ln554_reg_1460 <= trunc_ln554_fu_679_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln560_1_reg_1490 == 1'd0) & (tmp_7_reg_1404_pp0_iter1_reg == 1'd1))) begin
        and_ln570_1_reg_1571 <= and_ln570_1_fu_1098_p2;
        icmp_ln574_1_reg_1556 <= icmp_ln574_1_fu_1034_p2;
        man_V_5_reg_1551 <= man_V_5_fu_1001_p3;
        select_ln571_1_reg_1566 <= select_ln571_1_fu_1079_p3;
        sext_ln575_reg_1561 <= sext_ln575_fu_1040_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln560_reg_1465 == 1'd0) & (tmp_5_reg_1390_pp0_iter1_reg == 1'd1))) begin
        and_ln570_reg_1546 <= and_ln570_fu_978_p2;
        icmp_ln574_reg_1536 <= icmp_ln574_fu_918_p2;
        man_V_2_reg_1526 <= man_V_2_fu_875_p3;
        select_ln571_reg_1541 <= select_ln571_fu_959_p3;
        sext_ln570_reg_1531 <= sext_ln570_fu_905_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_nbreadreq_fu_434_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1090_reg_1427 <= icmp_ln1090_fu_583_p2;
        l_reg_1445 <= l_fu_641_p1;
        p_Result_15_reg_1432 <= stream_vector_out_TDATA_int_regslice[32'd47];
        stream_data_h_axis_last_reg_1422 <= stream_vector_out_TDATA_int_regslice[128'd64];
        tmp_V_2_reg_1437 <= tmp_V_2_fu_603_p3;
        trunc_ln1098_reg_1450 <= trunc_ln1098_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1090_reg_1427_pp0_iter1_reg <= icmp_ln1090_reg_1427;
        p_2_reg_1408_pp0_iter1_reg <= p_2_reg_1408;
        p_Result_15_reg_1432_pp0_iter1_reg <= p_Result_15_reg_1432;
        p_s_reg_1394_pp0_iter1_reg <= p_s_reg_1394;
        stream_data_h_axis_last_reg_1422_pp0_iter1_reg <= stream_data_h_axis_last_reg_1422;
        tmp_1_reg_1349 <= tmp_1_nbreadreq_fu_278_p6;
        tmp_1_reg_1349_pp0_iter1_reg <= tmp_1_reg_1349;
        tmp_2_reg_1358 <= tmp_2_nbreadreq_fu_304_p6;
        tmp_2_reg_1358_pp0_iter1_reg <= tmp_2_reg_1358;
        tmp_3_reg_1367 <= tmp_3_nbreadreq_fu_330_p6;
        tmp_3_reg_1367_pp0_iter1_reg <= tmp_3_reg_1367;
        tmp_4_reg_1376 <= tmp_4_nbreadreq_fu_356_p6;
        tmp_4_reg_1376_pp0_iter1_reg <= tmp_4_reg_1376;
        tmp_5_reg_1390 <= tmp_5_nbreadreq_fu_382_p6;
        tmp_5_reg_1390_pp0_iter1_reg <= tmp_5_reg_1390;
        tmp_6_reg_1418 <= tmp_6_nbreadreq_fu_434_p3;
        tmp_6_reg_1418_pp0_iter1_reg <= tmp_6_reg_1418;
        tmp_7_reg_1404 <= tmp_7_nbreadreq_fu_408_p6;
        tmp_7_reg_1404_pp0_iter1_reg <= tmp_7_reg_1404;
        tmp_V_2_reg_1437_pp0_iter1_reg <= tmp_V_2_reg_1437;
        tmp_data_V_1_reg_1353_pp0_iter1_reg <= tmp_data_V_1_reg_1353;
        tmp_data_V_4_reg_1380_pp0_iter1_reg <= tmp_data_V_4_reg_1380;
        tmp_data_V_reg_1344_pp0_iter1_reg <= tmp_data_V_reg_1344;
        tmp_last_V_1_reg_1385_pp0_iter1_reg <= tmp_last_V_1_reg_1385;
        tmp_reg_1340 <= tmp_nbreadreq_fu_252_p6;
        tmp_reg_1340_pp0_iter1_reg <= tmp_reg_1340;
        trunc_ln1098_reg_1450_pp0_iter1_reg <= trunc_ln1098_reg_1450;
        trunc_ln186_1_reg_1371_pp0_iter1_reg <= trunc_ln186_1_reg_1371;
        trunc_ln186_reg_1362_pp0_iter1_reg <= trunc_ln186_reg_1362;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1090_reg_1427_pp0_iter2_reg <= icmp_ln1090_reg_1427_pp0_iter1_reg;
        icmp_ln560_1_reg_1490_pp0_iter2_reg <= icmp_ln560_1_reg_1490;
        icmp_ln560_reg_1465_pp0_iter2_reg <= icmp_ln560_reg_1465;
        p_2_reg_1408_pp0_iter2_reg <= p_2_reg_1408_pp0_iter1_reg;
        p_Result_15_reg_1432_pp0_iter2_reg <= p_Result_15_reg_1432_pp0_iter1_reg;
        p_s_reg_1394_pp0_iter2_reg <= p_s_reg_1394_pp0_iter1_reg;
        stream_data_h_axis_last_reg_1422_pp0_iter2_reg <= stream_data_h_axis_last_reg_1422_pp0_iter1_reg;
        tmp_1_reg_1349_pp0_iter2_reg <= tmp_1_reg_1349_pp0_iter1_reg;
        tmp_1_reg_1349_pp0_iter3_reg <= tmp_1_reg_1349_pp0_iter2_reg;
        tmp_2_reg_1358_pp0_iter2_reg <= tmp_2_reg_1358_pp0_iter1_reg;
        tmp_2_reg_1358_pp0_iter3_reg <= tmp_2_reg_1358_pp0_iter2_reg;
        tmp_3_reg_1367_pp0_iter2_reg <= tmp_3_reg_1367_pp0_iter1_reg;
        tmp_3_reg_1367_pp0_iter3_reg <= tmp_3_reg_1367_pp0_iter2_reg;
        tmp_4_reg_1376_pp0_iter2_reg <= tmp_4_reg_1376_pp0_iter1_reg;
        tmp_4_reg_1376_pp0_iter3_reg <= tmp_4_reg_1376_pp0_iter2_reg;
        tmp_5_reg_1390_pp0_iter2_reg <= tmp_5_reg_1390_pp0_iter1_reg;
        tmp_5_reg_1390_pp0_iter3_reg <= tmp_5_reg_1390_pp0_iter2_reg;
        tmp_6_reg_1418_pp0_iter2_reg <= tmp_6_reg_1418_pp0_iter1_reg;
        tmp_6_reg_1418_pp0_iter3_reg <= tmp_6_reg_1418_pp0_iter2_reg;
        tmp_7_reg_1404_pp0_iter2_reg <= tmp_7_reg_1404_pp0_iter1_reg;
        tmp_7_reg_1404_pp0_iter3_reg <= tmp_7_reg_1404_pp0_iter2_reg;
        tmp_data_V_1_reg_1353_pp0_iter2_reg <= tmp_data_V_1_reg_1353_pp0_iter1_reg;
        tmp_data_V_4_reg_1380_pp0_iter2_reg <= tmp_data_V_4_reg_1380_pp0_iter1_reg;
        tmp_data_V_reg_1344_pp0_iter2_reg <= tmp_data_V_reg_1344_pp0_iter1_reg;
        tmp_last_V_1_reg_1385_pp0_iter2_reg <= tmp_last_V_1_reg_1385_pp0_iter1_reg;
        tmp_reg_1340_pp0_iter2_reg <= tmp_reg_1340_pp0_iter1_reg;
        tmp_reg_1340_pp0_iter3_reg <= tmp_reg_1340_pp0_iter2_reg;
        trunc_ln1098_reg_1450_pp0_iter2_reg <= trunc_ln1098_reg_1450_pp0_iter1_reg;
        trunc_ln186_1_reg_1371_pp0_iter2_reg <= trunc_ln186_1_reg_1371_pp0_iter1_reg;
        trunc_ln186_reg_1362_pp0_iter2_reg <= trunc_ln186_reg_1362_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1090_reg_1427 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_6_reg_1418 == 1'd1))) begin
        icmp_ln1109_reg_1521 <= icmp_ln1109_fu_852_p2;
        or_ln_reg_1516[0] <= or_ln_fu_844_p3[0];
        sub_ln1099_reg_1510 <= sub_ln1099_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1090_reg_1427_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1418_pp0_iter1_reg == 1'd1))) begin
        m_4_reg_1576 <= {{m_1_fu_1145_p2[48:1]}};
        p_Result_9_reg_1581 <= m_1_fu_1145_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_nbreadreq_fu_408_p6 == 1'd1))) begin
        p_2_reg_1408 <= axis_bias_in_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_nbreadreq_fu_382_p6 == 1'd1))) begin
        p_s_reg_1394 <= axis_weight_in_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_1_nbreadreq_fu_278_p6 == 1'd1))) begin
        tmp_data_V_1_reg_1353 <= axis_sigmoid_switch_in_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_4_nbreadreq_fu_356_p6 == 1'd1))) begin
        tmp_data_V_4_reg_1380 <= axis_vector_in_TDATA_int_regslice;
        tmp_last_V_1_reg_1385 <= axis_vector_in_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_252_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_data_V_reg_1344 <= axis_control_in_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_nbreadreq_fu_330_p6 == 1'd1))) begin
        trunc_ln186_1_reg_1371 <= trunc_ln186_1_fu_541_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_nbreadreq_fu_304_p6 == 1'd1))) begin
        trunc_ln186_reg_1362 <= trunc_ln186_fu_533_p1;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_nbreadreq_fu_408_p6 == 1'd1))) begin
        axis_bias_in_TDATA_blk_n = axis_bias_in_TVALID_int_regslice;
    end else begin
        axis_bias_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_nbreadreq_fu_408_p6 == 1'd1))) begin
        axis_bias_in_TREADY_int_regslice = 1'b1;
    end else begin
        axis_bias_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_252_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        axis_control_in_TDATA_blk_n = axis_control_in_TVALID_int_regslice;
    end else begin
        axis_control_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_252_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        axis_control_in_TREADY_int_regslice = 1'b1;
    end else begin
        axis_control_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_1_nbreadreq_fu_278_p6 == 1'd1))) begin
        axis_sigmoid_switch_in_TDATA_blk_n = axis_sigmoid_switch_in_TVALID_int_regslice;
    end else begin
        axis_sigmoid_switch_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_1_nbreadreq_fu_278_p6 == 1'd1))) begin
        axis_sigmoid_switch_in_TREADY_int_regslice = 1'b1;
    end else begin
        axis_sigmoid_switch_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_4_nbreadreq_fu_356_p6 == 1'd1))) begin
        axis_vector_in_TDATA_blk_n = axis_vector_in_TVALID_int_regslice;
    end else begin
        axis_vector_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_4_nbreadreq_fu_356_p6 == 1'd1))) begin
        axis_vector_in_TREADY_int_regslice = 1'b1;
    end else begin
        axis_vector_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_nbreadreq_fu_304_p6 == 1'd1))) begin
        axis_vector_in_len_in_TDATA_blk_n = axis_vector_in_len_in_TVALID_int_regslice;
    end else begin
        axis_vector_in_len_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_nbreadreq_fu_304_p6 == 1'd1))) begin
        axis_vector_in_len_in_TREADY_int_regslice = 1'b1;
    end else begin
        axis_vector_in_len_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_6_reg_1418_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_6_reg_1418_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        axis_vector_out_TDATA_blk_n = axis_vector_out_TREADY_int_regslice;
    end else begin
        axis_vector_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_reg_1418_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        axis_vector_out_TVALID_int_regslice = 1'b1;
    end else begin
        axis_vector_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_nbreadreq_fu_330_p6 == 1'd1))) begin
        axis_vector_out_len_in_TDATA_blk_n = axis_vector_out_len_in_TVALID_int_regslice;
    end else begin
        axis_vector_out_len_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_nbreadreq_fu_330_p6 == 1'd1))) begin
        axis_vector_out_len_in_TREADY_int_regslice = 1'b1;
    end else begin
        axis_vector_out_len_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_nbreadreq_fu_382_p6 == 1'd1))) begin
        axis_weight_in_TDATA_blk_n = axis_weight_in_TVALID_int_regslice;
    end else begin
        axis_weight_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_nbreadreq_fu_382_p6 == 1'd1))) begin
        axis_weight_in_TREADY_int_regslice = 1'b1;
    end else begin
        axis_weight_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_515_ce = 1'b1;
    end else begin
        grp_fu_515_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_518_ce = 1'b1;
    end else begin
        grp_fu_518_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_7_reg_1404_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_7_reg_1404_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        stream_bias_in_TDATA_blk_n = stream_bias_in_TREADY_int_regslice;
    end else begin
        stream_bias_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_7_reg_1404_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        stream_bias_in_TVALID_int_regslice = 1'b1;
    end else begin
        stream_bias_in_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_reg_1340_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_reg_1340_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        stream_control_in_TDATA_blk_n = stream_control_in_TREADY_int_regslice;
    end else begin
        stream_control_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_1340_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        stream_control_in_TVALID_int_regslice = 1'b1;
    end else begin
        stream_control_in_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_1_reg_1349_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_1_reg_1349_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        stream_sigmoid_switch_in_TDATA_blk_n = stream_sigmoid_switch_in_TREADY_int_regslice;
    end else begin
        stream_sigmoid_switch_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1349_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        stream_sigmoid_switch_in_TVALID_int_regslice = 1'b1;
    end else begin
        stream_sigmoid_switch_in_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_4_reg_1376_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_4_reg_1376_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        stream_vector_in_TDATA_blk_n = stream_vector_in_TREADY_int_regslice;
    end else begin
        stream_vector_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_4_reg_1376_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        stream_vector_in_TVALID_int_regslice = 1'b1;
    end else begin
        stream_vector_in_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_2_reg_1358_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_2_reg_1358_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        stream_vector_in_len_in_TDATA_blk_n = stream_vector_in_len_in_TREADY_int_regslice;
    end else begin
        stream_vector_in_len_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_2_reg_1358_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        stream_vector_in_len_in_TVALID_int_regslice = 1'b1;
    end else begin
        stream_vector_in_len_in_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (tmp_6_nbreadreq_fu_434_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_vector_out_TDATA_blk_n = stream_vector_out_TVALID_int_regslice;
    end else begin
        stream_vector_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (tmp_6_nbreadreq_fu_434_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_vector_out_TREADY_int_regslice = 1'b1;
    end else begin
        stream_vector_out_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_3_reg_1367_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_3_reg_1367_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        stream_vector_out_len_in_TDATA_blk_n = stream_vector_out_len_in_TREADY_int_regslice;
    end else begin
        stream_vector_out_len_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_3_reg_1367_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        stream_vector_out_len_in_TVALID_int_regslice = 1'b1;
    end else begin
        stream_vector_out_len_in_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_5_reg_1390_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_5_reg_1390_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        stream_weight_in_TDATA_blk_n = stream_weight_in_TREADY_int_regslice;
    end else begin
        stream_weight_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_5_reg_1390_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        stream_weight_in_TVALID_int_regslice = 1'b1;
    end else begin
        stream_weight_in_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_735_p2 = (12'd1075 - zext_ln455_1_fu_721_p1);

assign F2_fu_689_p2 = (12'd1075 - zext_ln455_fu_675_p1);

assign LD_2_fu_1328_p1 = p_Result_17_fu_1316_p5[31:0];

assign a_fu_805_p2 = (icmp_ln1102_fu_799_p2 & icmp_ln1101_fu_768_p2);

assign add_ln1109_fu_1103_p2 = ($signed(sub_ln1099_reg_1510) + $signed(32'd4294967271));

assign add_ln1124_fu_1303_p2 = (sub_ln1119_fu_1298_p2 + select_ln1098_fu_1291_p3);

assign add_ln570_1_fu_1008_p2 = ($signed(F2_1_reg_1497) + $signed(12'd4070));

assign add_ln570_fu_887_p2 = ($signed(F2_reg_1472) + $signed(12'd4074));

assign and_ln1104_fu_832_p2 = (xor_ln1104_fu_819_p2 & p_Result_3_fu_825_p3);

assign and_ln570_1_fu_1098_p2 = (xor_ln571_1_fu_1092_p2 & icmp_ln570_1_reg_1504);

assign and_ln570_fu_978_p2 = (xor_ln571_fu_972_p2 & icmp_ln570_fu_882_p2);

assign and_ln571_1_fu_1073_p2 = (xor_ln560_1_fu_1068_p2 & icmp_ln571_1_fu_1025_p2);

assign and_ln571_fu_953_p2 = (xor_ln560_fu_948_p2 & icmp_ln571_fu_909_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b1 == 1'b1) & (((tmp_6_nbreadreq_fu_434_p3 == 1'd1) & (stream_vector_out_TVALID_int_regslice == 1'b0)) | ((axis_bias_in_TVALID_int_regslice == 1'b0) & (tmp_7_nbreadreq_fu_408_p6 == 1'd1)) | ((axis_weight_in_TVALID_int_regslice == 1'b0) & (tmp_5_nbreadreq_fu_382_p6 == 1'd1)) | ((axis_vector_in_TVALID_int_regslice == 1'b0) & (tmp_4_nbreadreq_fu_356_p6 == 1'd1)) | ((axis_vector_out_len_in_TVALID_int_regslice == 1'b0) & (tmp_3_nbreadreq_fu_330_p6 == 1'd1)) | ((axis_vector_in_len_in_TVALID_int_regslice == 1'b0) & (tmp_2_nbreadreq_fu_304_p6 == 1'd1)) | ((axis_sigmoid_switch_in_TVALID_int_regslice == 1'b0) & (tmp_1_nbreadreq_fu_278_p6 == 1'd1)) | ((tmp_nbreadreq_fu_252_p6 == 1'd1) & (axis_control_in_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((regslice_both_stream_bias_in_U_apdone_blk == 1'b1) | (regslice_both_stream_weight_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_out_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_sigmoid_switch_in_U_apdone_blk == 1'b1) | (regslice_both_stream_control_in_U_apdone_blk == 1'b1) | (regslice_both_axis_vector_out_V_data_V_U_apdone_blk == 1'b1) | ((tmp_7_reg_1404_pp0_iter3_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter3_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter3_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter3_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter3_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter3_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((tmp_reg_1340_pp0_iter3_reg == 1'd1) & (stream_control_in_TREADY_int_regslice == 1'b0)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter3_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((tmp_7_reg_1404_pp0_iter2_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter2_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter2_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter2_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter2_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter2_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((stream_control_in_TREADY_int_regslice == 1'b0) & (tmp_reg_1340_pp0_iter2_reg == 1'd1)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter2_reg == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == 1'b1) & (((tmp_6_nbreadreq_fu_434_p3 == 1'd1) & (stream_vector_out_TVALID_int_regslice == 1'b0)) | ((axis_bias_in_TVALID_int_regslice == 1'b0) & (tmp_7_nbreadreq_fu_408_p6 == 1'd1)) | ((axis_weight_in_TVALID_int_regslice == 1'b0) & (tmp_5_nbreadreq_fu_382_p6 == 1'd1)) | ((axis_vector_in_TVALID_int_regslice == 1'b0) & (tmp_4_nbreadreq_fu_356_p6 == 1'd1)) | ((axis_vector_out_len_in_TVALID_int_regslice == 1'b0) & (tmp_3_nbreadreq_fu_330_p6 == 1'd1)) | ((axis_vector_in_len_in_TVALID_int_regslice == 1'b0) & (tmp_2_nbreadreq_fu_304_p6 == 1'd1)) | ((axis_sigmoid_switch_in_TVALID_int_regslice == 1'b0) & (tmp_1_nbreadreq_fu_278_p6 == 1'd1)) | ((tmp_nbreadreq_fu_252_p6 == 1'd1) & (axis_control_in_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | (regslice_both_stream_bias_in_U_apdone_blk == 1'b1) | (regslice_both_stream_weight_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_out_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_sigmoid_switch_in_U_apdone_blk == 1'b1) | (regslice_both_stream_control_in_U_apdone_blk == 1'b1) | (regslice_both_axis_vector_out_V_data_V_U_apdone_blk == 1'b1) | ((tmp_7_reg_1404_pp0_iter3_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter3_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter3_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter3_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter3_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter3_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((tmp_reg_1340_pp0_iter3_reg == 1'd1) & (stream_control_in_TREADY_int_regslice == 1'b0)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter3_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((tmp_7_reg_1404_pp0_iter2_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter2_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter2_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter2_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter2_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter2_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((stream_control_in_TREADY_int_regslice == 1'b0) & (tmp_reg_1340_pp0_iter2_reg == 1'd1)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter2_reg == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == 1'b1) & (((tmp_6_nbreadreq_fu_434_p3 == 1'd1) & (stream_vector_out_TVALID_int_regslice == 1'b0)) | ((axis_bias_in_TVALID_int_regslice == 1'b0) & (tmp_7_nbreadreq_fu_408_p6 == 1'd1)) | ((axis_weight_in_TVALID_int_regslice == 1'b0) & (tmp_5_nbreadreq_fu_382_p6 == 1'd1)) | ((axis_vector_in_TVALID_int_regslice == 1'b0) & (tmp_4_nbreadreq_fu_356_p6 == 1'd1)) | ((axis_vector_out_len_in_TVALID_int_regslice == 1'b0) & (tmp_3_nbreadreq_fu_330_p6 == 1'd1)) | ((axis_vector_in_len_in_TVALID_int_regslice == 1'b0) & (tmp_2_nbreadreq_fu_304_p6 == 1'd1)) | ((axis_sigmoid_switch_in_TVALID_int_regslice == 1'b0) & (tmp_1_nbreadreq_fu_278_p6 == 1'd1)) | ((tmp_nbreadreq_fu_252_p6 == 1'd1) & (axis_control_in_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | (regslice_both_stream_bias_in_U_apdone_blk == 1'b1) | (regslice_both_stream_weight_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_out_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_sigmoid_switch_in_U_apdone_blk == 1'b1) | (regslice_both_stream_control_in_U_apdone_blk == 1'b1) | (regslice_both_axis_vector_out_V_data_V_U_apdone_blk == 1'b1) | ((tmp_7_reg_1404_pp0_iter3_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter3_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter3_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter3_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter3_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter3_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((tmp_reg_1340_pp0_iter3_reg == 1'd1) & (stream_control_in_TREADY_int_regslice == 1'b0)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter3_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((tmp_7_reg_1404_pp0_iter2_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter2_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter2_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter2_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter2_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter2_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((stream_control_in_TREADY_int_regslice == 1'b0) & (tmp_reg_1340_pp0_iter2_reg == 1'd1)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter2_reg == 1'd1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((tmp_6_nbreadreq_fu_434_p3 == 1'd1) & (stream_vector_out_TVALID_int_regslice == 1'b0)) | ((axis_bias_in_TVALID_int_regslice == 1'b0) & (tmp_7_nbreadreq_fu_408_p6 == 1'd1)) | ((axis_weight_in_TVALID_int_regslice == 1'b0) & (tmp_5_nbreadreq_fu_382_p6 == 1'd1)) | ((axis_vector_in_TVALID_int_regslice == 1'b0) & (tmp_4_nbreadreq_fu_356_p6 == 1'd1)) | ((axis_vector_out_len_in_TVALID_int_regslice == 1'b0) & (tmp_3_nbreadreq_fu_330_p6 == 1'd1)) | ((axis_vector_in_len_in_TVALID_int_regslice == 1'b0) & (tmp_2_nbreadreq_fu_304_p6 == 1'd1)) | ((axis_sigmoid_switch_in_TVALID_int_regslice == 1'b0) & (tmp_1_nbreadreq_fu_278_p6 == 1'd1)) | ((tmp_nbreadreq_fu_252_p6 == 1'd1) & (axis_control_in_TVALID_int_regslice == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((tmp_7_reg_1404_pp0_iter2_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter2_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter2_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter2_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter2_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter2_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((stream_control_in_TREADY_int_regslice == 1'b0) & (tmp_reg_1340_pp0_iter2_reg == 1'd1)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter2_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (((tmp_7_reg_1404_pp0_iter2_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter2_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter2_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter2_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter2_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter2_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((stream_control_in_TREADY_int_regslice == 1'b0) & (tmp_reg_1340_pp0_iter2_reg == 1'd1)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter2_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state5_io = (((tmp_7_reg_1404_pp0_iter3_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter3_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter3_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter3_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter3_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter3_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((tmp_reg_1340_pp0_iter3_reg == 1'd1) & (stream_control_in_TREADY_int_regslice == 1'b0)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter3_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((regslice_both_stream_bias_in_U_apdone_blk == 1'b1) | (regslice_both_stream_weight_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_out_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_vector_in_len_in_U_apdone_blk == 1'b1) | (regslice_both_stream_sigmoid_switch_in_U_apdone_blk == 1'b1) | (regslice_both_stream_control_in_U_apdone_blk == 1'b1) | (regslice_both_axis_vector_out_V_data_V_U_apdone_blk == 1'b1) | ((tmp_7_reg_1404_pp0_iter3_reg == 1'd1) & (stream_bias_in_TREADY_int_regslice == 1'b0)) | ((tmp_5_reg_1390_pp0_iter3_reg == 1'd1) & (stream_weight_in_TREADY_int_regslice == 1'b0)) | ((tmp_4_reg_1376_pp0_iter3_reg == 1'd1) & (stream_vector_in_TREADY_int_regslice == 1'b0)) | ((tmp_3_reg_1367_pp0_iter3_reg == 1'd1) & (stream_vector_out_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_2_reg_1358_pp0_iter3_reg == 1'd1) & (stream_vector_in_len_in_TREADY_int_regslice == 1'b0)) | ((tmp_1_reg_1349_pp0_iter3_reg == 1'd1) & (stream_sigmoid_switch_in_TREADY_int_regslice == 1'b0)) | ((tmp_reg_1340_pp0_iter3_reg == 1'd1) & (stream_control_in_TREADY_int_regslice == 1'b0)) | ((axis_vector_out_TREADY_int_regslice == 1'b0) & (tmp_6_reg_1418_pp0_iter3_reg == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln575_1_fu_1243_p2 = $signed(man_V_5_reg_1551) >>> zext_ln575_1_fu_1240_p1;

assign ashr_ln575_fu_1191_p2 = $signed(man_V_2_reg_1526) >>> zext_ln575_fu_1188_p1;

assign axis_bias_in_TREADY = regslice_both_axis_bias_in_V_data_V_U_ack_in;

assign axis_control_in_TREADY = regslice_both_axis_control_in_V_data_V_U_ack_in;

assign axis_sigmoid_switch_in_TREADY = regslice_both_axis_sigmoid_switch_in_V_data_V_U_ack_in;

assign axis_vector_in_TREADY = regslice_both_axis_vector_in_V_data_V_U_ack_in;

assign axis_vector_in_len_in_TREADY = regslice_both_axis_vector_in_len_in_V_data_V_U_ack_in;

assign axis_vector_out_TDATA_int_regslice = ((icmp_ln1090_reg_1427_pp0_iter2_reg[0:0] == 1'b1) ? 32'd0 : LD_2_fu_1328_p1);

assign axis_vector_out_TVALID = regslice_both_axis_vector_out_V_data_V_U_vld_out;

assign axis_vector_out_len_in_TREADY = regslice_both_axis_vector_out_len_in_V_data_V_U_ack_in;

assign axis_weight_in_TREADY = regslice_both_axis_weight_in_V_data_V_U_ack_in;

assign exp_tmp_1_fu_711_p4 = {{ireg_1_fu_695_p1[62:52]}};

assign exp_tmp_fu_665_p4 = {{ireg_fu_649_p1[62:52]}};

assign grp_fu_515_p0 = axis_weight_in_TDATA_int_regslice;

assign grp_fu_518_p0 = axis_bias_in_TDATA_int_regslice;

assign icmp_ln1090_fu_583_p2 = ((stream_data_h_data_V_fu_571_p1 == 48'd0) ? 1'b1 : 1'b0);

assign icmp_ln1101_fu_768_p2 = (($signed(tmp_18_fu_758_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1102_fu_799_p2 = ((p_Result_8_fu_794_p2 != 48'd0) ? 1'b1 : 1'b0);

assign icmp_ln1109_fu_852_p2 = (($signed(lsb_index_fu_752_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln560_1_fu_729_p2 = ((trunc_ln544_1_fu_699_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_683_p2 = ((trunc_ln544_fu_653_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_1_fu_741_p2 = (($signed(F2_1_fu_735_p2) > $signed(12'd26)) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_882_p2 = (($signed(F2_reg_1472) > $signed(12'd22)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1025_p2 = ((F2_1_reg_1497 == 12'd26) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_909_p2 = ((F2_reg_1472 == 12'd22) ? 1'b1 : 1'b0);

assign icmp_ln574_1_fu_1034_p2 = ((sh_amt_1_fu_1018_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_918_p2 = ((sh_amt_fu_897_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_1_fu_1044_p2 = ((sh_amt_1_fu_1018_p3 < 12'd48) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_924_p2 = ((sh_amt_fu_897_p3 < 12'd25) ? 1'b1 : 1'b0);

assign ireg_1_fu_695_p1 = grp_fu_518_p1;

assign ireg_fu_649_p1 = grp_fu_515_p1;

assign l_fu_641_p1 = tmp_9_fu_633_p3[31:0];

assign lsb_index_fu_752_p2 = ($signed(sub_ln1099_fu_747_p2) + $signed(32'd4294967272));

assign lshr_ln1102_fu_788_p2 = 48'd281474976710655 >> zext_ln1102_fu_784_p1;

assign lshr_ln1109_fu_1112_p2 = tmp_V_2_reg_1437_pp0_iter1_reg >> zext_ln1109_fu_1108_p1;

assign m_1_fu_1145_p2 = (zext_ln1106_fu_1138_p1 + zext_ln1116_fu_1142_p1);

assign m_fu_1131_p3 = ((icmp_ln1109_reg_1521[0:0] == 1'b1) ? lshr_ln1109_fu_1112_p2 : shl_ln1110_fu_1126_p2);

assign man_V_1_fu_869_p2 = (54'd0 - zext_ln558_fu_865_p1);

assign man_V_2_fu_875_p3 = ((p_Result_11_reg_1455[0:0] == 1'b1) ? man_V_1_fu_869_p2 : zext_ln558_fu_865_p1);

assign man_V_4_fu_995_p2 = (54'd0 - zext_ln558_1_fu_991_p1);

assign man_V_5_fu_1001_p3 = ((p_Result_13_reg_1480[0:0] == 1'b1) ? man_V_4_fu_995_p2 : zext_ln558_1_fu_991_p1);

assign or_ln1104_fu_838_p2 = (and_ln1104_fu_832_p2 | a_fu_805_p2);

assign or_ln571_1_fu_1087_p2 = (icmp_ln571_1_fu_1025_p2 | icmp_ln560_1_reg_1490);

assign or_ln571_fu_967_p2 = (icmp_ln571_fu_909_p2 | icmp_ln560_reg_1465);

assign or_ln_fu_844_p3 = {{1'd0}, {or_ln1104_fu_838_p2}};

assign p_Result_12_fu_858_p3 = {{1'd1}, {trunc_ln554_reg_1460}};

assign p_Result_14_fu_984_p3 = {{1'd1}, {trunc_ln554_1_reg_1485}};

assign p_Result_15_fu_589_p3 = stream_vector_out_TDATA_int_regslice[32'd47];

assign p_Result_16_fu_621_p3 = {{1'd1}, {p_Result_s_fu_611_p4}};

assign p_Result_17_fu_1316_p5 = {{zext_ln1106_1_fu_1288_p1[63:32]}, {tmp_8_fu_1309_p3}, {zext_ln1106_1_fu_1288_p1[22:0]}};

assign p_Result_3_fu_825_p3 = tmp_V_2_reg_1437[lsb_index_fu_752_p2];

assign p_Result_8_fu_794_p2 = (tmp_V_2_reg_1437 & lshr_ln1102_fu_788_p2);

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_603_p3) begin
    for (ap_tvar_int_0 = 48 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 47 - 0) begin
            p_Result_s_fu_611_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_611_p4[ap_tvar_int_0] = tmp_V_2_fu_603_p3[47 - ap_tvar_int_0];
        end
    end
end

assign select_ln1098_fu_1291_p3 = ((p_Result_9_reg_1581[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln560_fu_1228_p3 = ((icmp_ln560_reg_1465_pp0_iter2_reg[0:0] == 1'b1) ? 25'd0 : select_ln570_fu_1222_p3);

assign select_ln570_2_fu_1274_p3 = ((and_ln570_1_reg_1571[0:0] == 1'b1) ? select_ln574_1_fu_1267_p3 : select_ln571_1_reg_1566);

assign select_ln570_fu_1222_p3 = ((and_ln570_reg_1546[0:0] == 1'b1) ? select_ln574_fu_1215_p3 : select_ln571_reg_1541);

assign select_ln571_1_fu_1079_p3 = ((and_ln571_1_fu_1073_p2[0:0] == 1'b1) ? trunc_ln572_1_fu_1030_p1 : select_ln592_1_fu_1060_p3);

assign select_ln571_fu_959_p3 = ((and_ln571_fu_953_p2[0:0] == 1'b1) ? trunc_ln572_fu_914_p1 : select_ln592_fu_940_p3);

assign select_ln574_1_fu_1267_p3 = ((icmp_ln574_1_reg_1556[0:0] == 1'b1) ? trunc_ln575_1_fu_1248_p1 : select_ln577_1_fu_1259_p3);

assign select_ln574_fu_1215_p3 = ((icmp_ln574_reg_1536[0:0] == 1'b1) ? trunc_ln575_fu_1196_p1 : select_ln577_fu_1207_p3);

assign select_ln577_1_fu_1259_p3 = ((tmp_15_fu_1252_p3[0:0] == 1'b1) ? 48'd281474976710655 : 48'd0);

assign select_ln577_fu_1207_p3 = ((tmp_12_fu_1200_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln592_1_fu_1060_p3 = ((icmp_ln592_1_fu_1044_p2[0:0] == 1'b1) ? shl_ln593_1_fu_1054_p2 : 48'd0);

assign select_ln592_fu_940_p3 = ((icmp_ln592_fu_924_p2[0:0] == 1'b1) ? shl_ln593_fu_934_p2 : 25'd0);

assign sext_ln1204_fu_629_p1 = $signed(p_Result_16_fu_621_p3);

assign sext_ln570_fu_905_p1 = sh_amt_fu_897_p3;

assign sext_ln570cast_fu_930_p1 = sext_ln570_fu_905_p1[24:0];

assign sext_ln575_fu_1040_p1 = sh_amt_1_fu_1018_p3;

assign sh_amt_1_fu_1018_p3 = ((icmp_ln570_1_reg_1504[0:0] == 1'b1) ? add_ln570_1_fu_1008_p2 : sub_ln570_1_fu_1013_p2);

assign sh_amt_fu_897_p3 = ((icmp_ln570_fu_882_p2[0:0] == 1'b1) ? add_ln570_fu_887_p2 : sub_ln570_fu_892_p2);

assign shl_ln1110_fu_1126_p2 = tmp_V_2_reg_1437_pp0_iter1_reg << zext_ln1110_fu_1122_p1;

assign shl_ln593_1_fu_1054_p2 = trunc_ln572_1_fu_1030_p1 << zext_ln593_fu_1050_p1;

assign shl_ln593_fu_934_p2 = trunc_ln572_fu_914_p1 << sext_ln570cast_fu_930_p1;

assign stream_bias_in_TDATA_int_regslice = ((icmp_ln560_1_reg_1490_pp0_iter2_reg[0:0] == 1'b1) ? 48'd0 : select_ln570_2_fu_1274_p3);

assign stream_bias_in_TVALID = regslice_both_stream_bias_in_U_vld_out;

assign stream_control_in_TVALID = regslice_both_stream_control_in_U_vld_out;

assign stream_data_h_data_V_fu_571_p1 = stream_vector_out_TDATA_int_regslice[47:0];

assign stream_sigmoid_switch_in_TVALID = regslice_both_stream_sigmoid_switch_in_U_vld_out;

assign stream_vector_in_TDATA_int_regslice = tmp_s_fu_1177_p3;

assign stream_vector_in_TVALID = regslice_both_stream_vector_in_U_vld_out;

assign stream_vector_in_len_in_TDATA_int_regslice = trunc_ln186_reg_1362_pp0_iter2_reg;

assign stream_vector_in_len_in_TVALID = regslice_both_stream_vector_in_len_in_U_vld_out;

assign stream_vector_out_TREADY = regslice_both_stream_vector_out_U_ack_in;

assign stream_vector_out_len_in_TDATA_int_regslice = trunc_ln186_1_reg_1371_pp0_iter2_reg;

assign stream_vector_out_len_in_TVALID = regslice_both_stream_vector_out_len_in_U_vld_out;

assign stream_weight_in_TDATA_int_regslice = select_ln560_fu_1228_p3;

assign stream_weight_in_TVALID = regslice_both_stream_weight_in_U_vld_out;

assign sub_ln1099_fu_747_p2 = (32'd48 - l_reg_1445);

assign sub_ln1102_fu_778_p2 = (6'd9 - trunc_ln1102_fu_774_p1);

assign sub_ln1110_fu_1117_p2 = (32'd25 - sub_ln1099_reg_1510);

assign sub_ln1119_fu_1298_p2 = (8'd28 - trunc_ln1098_reg_1450_pp0_iter2_reg);

assign sub_ln570_1_fu_1013_p2 = (12'd26 - F2_1_reg_1497);

assign sub_ln570_fu_892_p2 = (12'd22 - F2_reg_1472);

assign tmp_12_fu_1200_p3 = p_s_reg_1394_pp0_iter2_reg[32'd31];

assign tmp_15_fu_1252_p3 = p_2_reg_1408_pp0_iter2_reg[32'd31];

assign tmp_18_fu_758_p4 = {{lsb_index_fu_752_p2[31:1]}};

assign tmp_19_fu_811_p3 = lsb_index_fu_752_p2[32'd31];

assign tmp_1_nbreadreq_fu_278_p6 = axis_sigmoid_switch_in_TVALID_int_regslice;

assign tmp_2_nbreadreq_fu_304_p6 = axis_vector_in_len_in_TVALID_int_regslice;

assign tmp_3_nbreadreq_fu_330_p6 = axis_vector_out_len_in_TVALID_int_regslice;

assign tmp_4_nbreadreq_fu_356_p6 = axis_vector_in_TVALID_int_regslice;

assign tmp_5_nbreadreq_fu_382_p6 = axis_weight_in_TVALID_int_regslice;

assign tmp_6_nbreadreq_fu_434_p3 = stream_vector_out_TVALID_int_regslice;

assign tmp_7_nbreadreq_fu_408_p6 = axis_bias_in_TVALID_int_regslice;

assign tmp_8_fu_1309_p3 = {{p_Result_15_reg_1432_pp0_iter2_reg}, {add_ln1124_fu_1303_p2}};


always @ (sext_ln1204_fu_629_p1) begin
    if (sext_ln1204_fu_629_p1[0] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd0;
    end else if (sext_ln1204_fu_629_p1[1] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd1;
    end else if (sext_ln1204_fu_629_p1[2] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd2;
    end else if (sext_ln1204_fu_629_p1[3] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd3;
    end else if (sext_ln1204_fu_629_p1[4] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd4;
    end else if (sext_ln1204_fu_629_p1[5] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd5;
    end else if (sext_ln1204_fu_629_p1[6] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd6;
    end else if (sext_ln1204_fu_629_p1[7] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd7;
    end else if (sext_ln1204_fu_629_p1[8] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd8;
    end else if (sext_ln1204_fu_629_p1[9] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd9;
    end else if (sext_ln1204_fu_629_p1[10] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd10;
    end else if (sext_ln1204_fu_629_p1[11] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd11;
    end else if (sext_ln1204_fu_629_p1[12] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd12;
    end else if (sext_ln1204_fu_629_p1[13] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd13;
    end else if (sext_ln1204_fu_629_p1[14] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd14;
    end else if (sext_ln1204_fu_629_p1[15] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd15;
    end else if (sext_ln1204_fu_629_p1[16] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd16;
    end else if (sext_ln1204_fu_629_p1[17] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd17;
    end else if (sext_ln1204_fu_629_p1[18] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd18;
    end else if (sext_ln1204_fu_629_p1[19] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd19;
    end else if (sext_ln1204_fu_629_p1[20] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd20;
    end else if (sext_ln1204_fu_629_p1[21] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd21;
    end else if (sext_ln1204_fu_629_p1[22] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd22;
    end else if (sext_ln1204_fu_629_p1[23] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd23;
    end else if (sext_ln1204_fu_629_p1[24] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd24;
    end else if (sext_ln1204_fu_629_p1[25] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd25;
    end else if (sext_ln1204_fu_629_p1[26] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd26;
    end else if (sext_ln1204_fu_629_p1[27] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd27;
    end else if (sext_ln1204_fu_629_p1[28] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd28;
    end else if (sext_ln1204_fu_629_p1[29] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd29;
    end else if (sext_ln1204_fu_629_p1[30] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd30;
    end else if (sext_ln1204_fu_629_p1[31] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd31;
    end else if (sext_ln1204_fu_629_p1[32] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd32;
    end else if (sext_ln1204_fu_629_p1[33] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd33;
    end else if (sext_ln1204_fu_629_p1[34] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd34;
    end else if (sext_ln1204_fu_629_p1[35] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd35;
    end else if (sext_ln1204_fu_629_p1[36] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd36;
    end else if (sext_ln1204_fu_629_p1[37] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd37;
    end else if (sext_ln1204_fu_629_p1[38] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd38;
    end else if (sext_ln1204_fu_629_p1[39] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd39;
    end else if (sext_ln1204_fu_629_p1[40] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd40;
    end else if (sext_ln1204_fu_629_p1[41] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd41;
    end else if (sext_ln1204_fu_629_p1[42] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd42;
    end else if (sext_ln1204_fu_629_p1[43] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd43;
    end else if (sext_ln1204_fu_629_p1[44] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd44;
    end else if (sext_ln1204_fu_629_p1[45] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd45;
    end else if (sext_ln1204_fu_629_p1[46] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd46;
    end else if (sext_ln1204_fu_629_p1[47] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd47;
    end else if (sext_ln1204_fu_629_p1[48] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd48;
    end else if (sext_ln1204_fu_629_p1[49] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd49;
    end else if (sext_ln1204_fu_629_p1[50] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd50;
    end else if (sext_ln1204_fu_629_p1[51] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd51;
    end else if (sext_ln1204_fu_629_p1[52] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd52;
    end else if (sext_ln1204_fu_629_p1[53] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd53;
    end else if (sext_ln1204_fu_629_p1[54] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd54;
    end else if (sext_ln1204_fu_629_p1[55] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd55;
    end else if (sext_ln1204_fu_629_p1[56] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd56;
    end else if (sext_ln1204_fu_629_p1[57] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd57;
    end else if (sext_ln1204_fu_629_p1[58] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd58;
    end else if (sext_ln1204_fu_629_p1[59] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd59;
    end else if (sext_ln1204_fu_629_p1[60] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd60;
    end else if (sext_ln1204_fu_629_p1[61] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd61;
    end else if (sext_ln1204_fu_629_p1[62] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd62;
    end else if (sext_ln1204_fu_629_p1[63] == 1'b1) begin
        tmp_9_fu_633_p3 = 64'd63;
    end else begin
        tmp_9_fu_633_p3 = 64'd64;
    end
end

assign tmp_V_2_fu_603_p3 = ((p_Result_15_fu_589_p3[0:0] == 1'b1) ? tmp_V_fu_597_p2 : stream_data_h_data_V_fu_571_p1);

assign tmp_V_fu_597_p2 = (48'd0 - stream_data_h_data_V_fu_571_p1);

assign tmp_nbreadreq_fu_252_p6 = axis_control_in_TVALID_int_regslice;

assign tmp_s_fu_1177_p3 = {{tmp_last_V_1_reg_1385_pp0_iter2_reg}, {tmp_data_V_4_reg_1380_pp0_iter2_reg}};

assign trunc_ln1098_fu_645_p1 = tmp_9_fu_633_p3[7:0];

assign trunc_ln1102_fu_774_p1 = sub_ln1099_fu_747_p2[5:0];

assign trunc_ln186_1_fu_541_p1 = axis_vector_out_len_in_TDATA_int_regslice[11:0];

assign trunc_ln186_fu_533_p1 = axis_vector_in_len_in_TDATA_int_regslice[11:0];

assign trunc_ln544_1_fu_699_p1 = ireg_1_fu_695_p1[62:0];

assign trunc_ln544_fu_653_p1 = ireg_fu_649_p1[62:0];

assign trunc_ln554_1_fu_725_p1 = ireg_1_fu_695_p1[51:0];

assign trunc_ln554_fu_679_p1 = ireg_fu_649_p1[51:0];

assign trunc_ln572_1_fu_1030_p1 = man_V_5_fu_1001_p3[47:0];

assign trunc_ln572_fu_914_p1 = man_V_2_fu_875_p3[24:0];

assign trunc_ln575_1_fu_1248_p1 = ashr_ln575_1_fu_1243_p2[47:0];

assign trunc_ln575_fu_1196_p1 = ashr_ln575_fu_1191_p2[24:0];

assign xor_ln1104_fu_819_p2 = (tmp_19_fu_811_p3 ^ 1'd1);

assign xor_ln560_1_fu_1068_p2 = (icmp_ln560_1_reg_1490 ^ 1'd1);

assign xor_ln560_fu_948_p2 = (icmp_ln560_reg_1465 ^ 1'd1);

assign xor_ln571_1_fu_1092_p2 = (or_ln571_1_fu_1087_p2 ^ 1'd1);

assign xor_ln571_fu_972_p2 = (or_ln571_fu_967_p2 ^ 1'd1);

assign zext_ln1102_fu_784_p1 = sub_ln1102_fu_778_p2;

assign zext_ln1106_1_fu_1288_p1 = m_4_reg_1576;

assign zext_ln1106_fu_1138_p1 = m_fu_1131_p3;

assign zext_ln1109_fu_1108_p1 = add_ln1109_fu_1103_p2;

assign zext_ln1110_fu_1122_p1 = sub_ln1110_fu_1117_p2;

assign zext_ln1116_fu_1142_p1 = or_ln_reg_1516;

assign zext_ln455_1_fu_721_p1 = exp_tmp_1_fu_711_p4;

assign zext_ln455_fu_675_p1 = exp_tmp_fu_665_p4;

assign zext_ln558_1_fu_991_p1 = p_Result_14_fu_984_p3;

assign zext_ln558_fu_865_p1 = p_Result_12_fu_858_p3;

assign zext_ln575_1_fu_1240_p1 = $unsigned(sext_ln575_reg_1561);

assign zext_ln575_fu_1188_p1 = $unsigned(sext_ln570_reg_1531);

assign zext_ln593_fu_1050_p1 = $unsigned(sext_ln575_fu_1040_p1);

always @ (posedge ap_clk) begin
    or_ln_reg_1516[1] <= 1'b0;
end

endmodule //RBM_interface
