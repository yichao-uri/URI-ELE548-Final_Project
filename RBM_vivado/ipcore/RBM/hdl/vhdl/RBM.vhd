-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity RBM is
port (
    stream_control_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    stream_sigmoid_switch_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    vector_in_len_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    vector_out_len_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    stream_vector_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_weight_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_bias_in_TDATA : IN STD_LOGIC_VECTOR (47 downto 0);
    stream_vector_out_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_control_in_TVALID : IN STD_LOGIC;
    stream_control_in_TREADY : OUT STD_LOGIC;
    vector_in_len_TVALID : IN STD_LOGIC;
    vector_in_len_TREADY : OUT STD_LOGIC;
    vector_out_len_TVALID : IN STD_LOGIC;
    vector_out_len_TREADY : OUT STD_LOGIC;
    stream_vector_in_TVALID : IN STD_LOGIC;
    stream_vector_in_TREADY : OUT STD_LOGIC;
    stream_weight_in_TVALID : IN STD_LOGIC;
    stream_weight_in_TREADY : OUT STD_LOGIC;
    stream_bias_in_TVALID : IN STD_LOGIC;
    stream_bias_in_TREADY : OUT STD_LOGIC;
    stream_sigmoid_switch_TVALID : IN STD_LOGIC;
    stream_sigmoid_switch_TREADY : OUT STD_LOGIC;
    stream_vector_out_TVALID : OUT STD_LOGIC;
    stream_vector_out_TREADY : IN STD_LOGIC );
end;


architecture behav of RBM is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "RBM_RBM,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=12.500000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.028300,HLS_SYN_LAT=42,HLS_SYN_TPT=1,HLS_SYN_MEM=103,HLS_SYN_DSP=0,HLS_SYN_FF=35621,HLS_SYN_LUT=28320,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal control_split_U0_ap_start : STD_LOGIC;
    signal control_split_U0_start_full_n : STD_LOGIC;
    signal control_split_U0_ap_done : STD_LOGIC;
    signal control_split_U0_ap_continue : STD_LOGIC;
    signal control_split_U0_ap_idle : STD_LOGIC;
    signal control_split_U0_ap_ready : STD_LOGIC;
    signal control_split_U0_control_ch173_din : STD_LOGIC_VECTOR (7 downto 0);
    signal control_split_U0_control_ch173_write : STD_LOGIC;
    signal control_split_U0_control_ch274_din : STD_LOGIC_VECTOR (7 downto 0);
    signal control_split_U0_control_ch274_write : STD_LOGIC;
    signal control_split_U0_control_ch375_din : STD_LOGIC_VECTOR (7 downto 0);
    signal control_split_U0_control_ch375_write : STD_LOGIC;
    signal control_split_U0_start_out : STD_LOGIC;
    signal control_split_U0_start_write : STD_LOGIC;
    signal control_split_U0_stream_control_in_TREADY : STD_LOGIC;
    signal rbm_size_split_U0_ap_start : STD_LOGIC;
    signal rbm_size_split_U0_ap_done : STD_LOGIC;
    signal rbm_size_split_U0_ap_continue : STD_LOGIC;
    signal rbm_size_split_U0_ap_idle : STD_LOGIC;
    signal rbm_size_split_U0_ap_ready : STD_LOGIC;
    signal rbm_size_split_U0_vector_in_len_ch176_din : STD_LOGIC_VECTOR (11 downto 0);
    signal rbm_size_split_U0_vector_in_len_ch176_write : STD_LOGIC;
    signal rbm_size_split_U0_vector_in_len_ch277_din : STD_LOGIC_VECTOR (11 downto 0);
    signal rbm_size_split_U0_vector_in_len_ch277_write : STD_LOGIC;
    signal rbm_size_split_U0_vector_in_len_ch378_din : STD_LOGIC_VECTOR (11 downto 0);
    signal rbm_size_split_U0_vector_in_len_ch378_write : STD_LOGIC;
    signal rbm_size_split_U0_vector_out_len_ch179_din : STD_LOGIC_VECTOR (11 downto 0);
    signal rbm_size_split_U0_vector_out_len_ch179_write : STD_LOGIC;
    signal rbm_size_split_U0_vector_out_len_ch280_din : STD_LOGIC_VECTOR (11 downto 0);
    signal rbm_size_split_U0_vector_out_len_ch280_write : STD_LOGIC;
    signal rbm_size_split_U0_vector_out_len_ch381_din : STD_LOGIC_VECTOR (11 downto 0);
    signal rbm_size_split_U0_vector_out_len_ch381_write : STD_LOGIC;
    signal rbm_size_split_U0_start_out : STD_LOGIC;
    signal rbm_size_split_U0_start_write : STD_LOGIC;
    signal rbm_size_split_U0_vector_in_len_TREADY : STD_LOGIC;
    signal rbm_size_split_U0_vector_out_len_TREADY : STD_LOGIC;
    signal double_buffer_U0_ap_start : STD_LOGIC;
    signal double_buffer_U0_ap_done : STD_LOGIC;
    signal double_buffer_U0_ap_continue : STD_LOGIC;
    signal double_buffer_U0_ap_idle : STD_LOGIC;
    signal double_buffer_U0_ap_ready : STD_LOGIC;
    signal double_buffer_U0_vector_in_len_ch176_read : STD_LOGIC;
    signal double_buffer_U0_control_ch173_read : STD_LOGIC;
    signal double_buffer_U0_buffer_out_din : STD_LOGIC_VECTOR (20 downto 0);
    signal double_buffer_U0_buffer_out_write : STD_LOGIC;
    signal double_buffer_U0_stream_vector_in_TREADY : STD_LOGIC;
    signal data_flow_control_U0_ap_start : STD_LOGIC;
    signal data_flow_control_U0_ap_done : STD_LOGIC;
    signal data_flow_control_U0_ap_continue : STD_LOGIC;
    signal data_flow_control_U0_ap_idle : STD_LOGIC;
    signal data_flow_control_U0_ap_ready : STD_LOGIC;
    signal data_flow_control_U0_control_ch274_read : STD_LOGIC;
    signal data_flow_control_U0_buffer_out_read : STD_LOGIC;
    signal data_flow_control_U0_vector_in_len_ch277_read : STD_LOGIC;
    signal data_flow_control_U0_vector_out_len_ch179_read : STD_LOGIC;
    signal data_flow_control_U0_systolic_input_din : STD_LOGIC_VECTOR (20 downto 0);
    signal data_flow_control_U0_systolic_input_write : STD_LOGIC;
    signal data_flow_control_U0_stream_weight_row_index_din : STD_LOGIC_VECTOR (639 downto 0);
    signal data_flow_control_U0_stream_weight_row_index_write : STD_LOGIC;
    signal data_flow_control_U0_stream_pe_valid83_din : STD_LOGIC_VECTOR (63 downto 0);
    signal data_flow_control_U0_stream_pe_valid83_write : STD_LOGIC;
    signal data_flow_control_U0_stream_bias_col_index82_din : STD_LOGIC_VECTOR (9 downto 0);
    signal data_flow_control_U0_stream_bias_col_index82_write : STD_LOGIC;
    signal weight_bias_memory_U0_ap_start : STD_LOGIC;
    signal weight_bias_memory_U0_ap_done : STD_LOGIC;
    signal weight_bias_memory_U0_ap_continue : STD_LOGIC;
    signal weight_bias_memory_U0_ap_idle : STD_LOGIC;
    signal weight_bias_memory_U0_ap_ready : STD_LOGIC;
    signal weight_bias_memory_U0_stream_bias_col_index82_read : STD_LOGIC;
    signal weight_bias_memory_U0_stream_weight_row_index_read : STD_LOGIC;
    signal weight_bias_memory_U0_vector_in_len_ch378_read : STD_LOGIC;
    signal weight_bias_memory_U0_vector_out_len_ch280_read : STD_LOGIC;
    signal weight_bias_memory_U0_control_ch375_read : STD_LOGIC;
    signal weight_bias_memory_U0_stream_bias_out84_din : STD_LOGIC_VECTOR (47 downto 0);
    signal weight_bias_memory_U0_stream_bias_out84_write : STD_LOGIC;
    signal weight_bias_memory_U0_stream_weight_out_din : STD_LOGIC_VECTOR (1599 downto 0);
    signal weight_bias_memory_U0_stream_weight_out_write : STD_LOGIC;
    signal weight_bias_memory_U0_stream_weight_in_TREADY : STD_LOGIC;
    signal weight_bias_memory_U0_stream_bias_in_TREADY : STD_LOGIC;
    signal systolic_array_U0_ap_start : STD_LOGIC;
    signal systolic_array_U0_ap_done : STD_LOGIC;
    signal systolic_array_U0_ap_continue : STD_LOGIC;
    signal systolic_array_U0_ap_idle : STD_LOGIC;
    signal systolic_array_U0_ap_ready : STD_LOGIC;
    signal systolic_array_U0_systolic_input_read : STD_LOGIC;
    signal systolic_array_U0_stream_bias_out84_read : STD_LOGIC;
    signal systolic_array_U0_stream_pe_valid83_read : STD_LOGIC;
    signal systolic_array_U0_stream_weight_out_read : STD_LOGIC;
    signal systolic_array_U0_vector_out_len_ch381_read : STD_LOGIC;
    signal systolic_array_U0_systolic_out_din : STD_LOGIC_VECTOR (48 downto 0);
    signal systolic_array_U0_systolic_out_write : STD_LOGIC;
    signal systolic_array_U0_start_out : STD_LOGIC;
    signal systolic_array_U0_start_write : STD_LOGIC;
    signal sigmoid_U0_ap_start : STD_LOGIC;
    signal sigmoid_U0_ap_done : STD_LOGIC;
    signal sigmoid_U0_ap_continue : STD_LOGIC;
    signal sigmoid_U0_ap_idle : STD_LOGIC;
    signal sigmoid_U0_ap_ready : STD_LOGIC;
    signal sigmoid_U0_systolic_out_read : STD_LOGIC;
    signal sigmoid_U0_stream_sigmoid_switch_TREADY : STD_LOGIC;
    signal sigmoid_U0_stream_vector_out_TDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal sigmoid_U0_stream_vector_out_TVALID : STD_LOGIC;
    signal control_ch1_full_n : STD_LOGIC;
    signal control_ch1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch1_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch1_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch1_empty_n : STD_LOGIC;
    signal control_ch2_full_n : STD_LOGIC;
    signal control_ch2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch2_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch2_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch2_empty_n : STD_LOGIC;
    signal control_ch3_full_n : STD_LOGIC;
    signal control_ch3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch3_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch3_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal control_ch3_empty_n : STD_LOGIC;
    signal vector_in_len_ch1_full_n : STD_LOGIC;
    signal vector_in_len_ch1_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal vector_in_len_ch1_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_in_len_ch1_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_in_len_ch1_empty_n : STD_LOGIC;
    signal vector_in_len_ch2_full_n : STD_LOGIC;
    signal vector_in_len_ch2_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal vector_in_len_ch2_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_in_len_ch2_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_in_len_ch2_empty_n : STD_LOGIC;
    signal vector_in_len_ch3_full_n : STD_LOGIC;
    signal vector_in_len_ch3_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal vector_in_len_ch3_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_in_len_ch3_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_in_len_ch3_empty_n : STD_LOGIC;
    signal vector_out_len_ch1_full_n : STD_LOGIC;
    signal vector_out_len_ch1_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal vector_out_len_ch1_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_out_len_ch1_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_out_len_ch1_empty_n : STD_LOGIC;
    signal vector_out_len_ch2_full_n : STD_LOGIC;
    signal vector_out_len_ch2_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal vector_out_len_ch2_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_out_len_ch2_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_out_len_ch2_empty_n : STD_LOGIC;
    signal vector_out_len_ch3_full_n : STD_LOGIC;
    signal vector_out_len_ch3_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal vector_out_len_ch3_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_out_len_ch3_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal vector_out_len_ch3_empty_n : STD_LOGIC;
    signal buffer_out_full_n : STD_LOGIC;
    signal buffer_out_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal buffer_out_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal buffer_out_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal buffer_out_empty_n : STD_LOGIC;
    signal systolic_input_full_n : STD_LOGIC;
    signal systolic_input_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal systolic_input_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal systolic_input_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal systolic_input_empty_n : STD_LOGIC;
    signal stream_weight_row_index_full_n : STD_LOGIC;
    signal stream_weight_row_index_dout : STD_LOGIC_VECTOR (639 downto 0);
    signal stream_weight_row_index_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_weight_row_index_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_weight_row_index_empty_n : STD_LOGIC;
    signal stream_bias_col_index_full_n : STD_LOGIC;
    signal stream_bias_col_index_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal stream_bias_col_index_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_bias_col_index_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_bias_col_index_empty_n : STD_LOGIC;
    signal stream_pe_valid_full_n : STD_LOGIC;
    signal stream_pe_valid_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_pe_valid_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_pe_valid_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_pe_valid_empty_n : STD_LOGIC;
    signal stream_weight_out_full_n : STD_LOGIC;
    signal stream_weight_out_dout : STD_LOGIC_VECTOR (1599 downto 0);
    signal stream_weight_out_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_weight_out_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_weight_out_empty_n : STD_LOGIC;
    signal stream_bias_out_full_n : STD_LOGIC;
    signal stream_bias_out_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal stream_bias_out_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_bias_out_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_bias_out_empty_n : STD_LOGIC;
    signal systolic_out_full_n : STD_LOGIC;
    signal systolic_out_dout : STD_LOGIC_VECTOR (48 downto 0);
    signal systolic_out_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal systolic_out_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal systolic_out_empty_n : STD_LOGIC;
    signal start_for_double_buffer_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_double_buffer_U0_full_n : STD_LOGIC;
    signal start_for_double_buffer_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_double_buffer_U0_empty_n : STD_LOGIC;
    signal start_for_data_flow_control_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_data_flow_control_U0_full_n : STD_LOGIC;
    signal start_for_data_flow_control_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_data_flow_control_U0_empty_n : STD_LOGIC;
    signal start_for_weight_bias_memory_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_weight_bias_memory_U0_full_n : STD_LOGIC;
    signal start_for_weight_bias_memory_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_weight_bias_memory_U0_empty_n : STD_LOGIC;
    signal start_for_systolic_array_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_systolic_array_U0_full_n : STD_LOGIC;
    signal start_for_systolic_array_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_systolic_array_U0_empty_n : STD_LOGIC;
    signal start_for_sigmoid_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sigmoid_U0_full_n : STD_LOGIC;
    signal start_for_sigmoid_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sigmoid_U0_empty_n : STD_LOGIC;

    component RBM_control_split IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_control_in_TVALID : IN STD_LOGIC;
        control_ch173_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        control_ch173_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch173_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch173_full_n : IN STD_LOGIC;
        control_ch173_write : OUT STD_LOGIC;
        control_ch274_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        control_ch274_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch274_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch274_full_n : IN STD_LOGIC;
        control_ch274_write : OUT STD_LOGIC;
        control_ch375_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        control_ch375_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch375_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch375_full_n : IN STD_LOGIC;
        control_ch375_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        stream_control_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_control_in_TREADY : OUT STD_LOGIC );
    end component;


    component RBM_rbm_size_split IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vector_in_len_TVALID : IN STD_LOGIC;
        vector_out_len_TVALID : IN STD_LOGIC;
        vector_in_len_ch176_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        vector_in_len_ch176_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch176_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch176_full_n : IN STD_LOGIC;
        vector_in_len_ch176_write : OUT STD_LOGIC;
        vector_in_len_ch277_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        vector_in_len_ch277_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch277_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch277_full_n : IN STD_LOGIC;
        vector_in_len_ch277_write : OUT STD_LOGIC;
        vector_in_len_ch378_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        vector_in_len_ch378_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch378_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch378_full_n : IN STD_LOGIC;
        vector_in_len_ch378_write : OUT STD_LOGIC;
        vector_out_len_ch179_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        vector_out_len_ch179_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch179_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch179_full_n : IN STD_LOGIC;
        vector_out_len_ch179_write : OUT STD_LOGIC;
        vector_out_len_ch280_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        vector_out_len_ch280_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch280_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch280_full_n : IN STD_LOGIC;
        vector_out_len_ch280_write : OUT STD_LOGIC;
        vector_out_len_ch381_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        vector_out_len_ch381_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch381_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch381_full_n : IN STD_LOGIC;
        vector_out_len_ch381_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        vector_in_len_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        vector_in_len_TREADY : OUT STD_LOGIC;
        vector_out_len_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        vector_out_len_TREADY : OUT STD_LOGIC );
    end component;


    component RBM_double_buffer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_vector_in_TVALID : IN STD_LOGIC;
        vector_in_len_ch176_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        vector_in_len_ch176_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch176_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch176_empty_n : IN STD_LOGIC;
        vector_in_len_ch176_read : OUT STD_LOGIC;
        control_ch173_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch173_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch173_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch173_empty_n : IN STD_LOGIC;
        control_ch173_read : OUT STD_LOGIC;
        buffer_out_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        buffer_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        buffer_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        buffer_out_full_n : IN STD_LOGIC;
        buffer_out_write : OUT STD_LOGIC;
        stream_vector_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        stream_vector_in_TREADY : OUT STD_LOGIC );
    end component;


    component RBM_data_flow_control IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        control_ch274_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch274_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch274_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch274_empty_n : IN STD_LOGIC;
        control_ch274_read : OUT STD_LOGIC;
        buffer_out_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        buffer_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        buffer_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        buffer_out_empty_n : IN STD_LOGIC;
        buffer_out_read : OUT STD_LOGIC;
        vector_in_len_ch277_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        vector_in_len_ch277_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch277_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch277_empty_n : IN STD_LOGIC;
        vector_in_len_ch277_read : OUT STD_LOGIC;
        vector_out_len_ch179_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        vector_out_len_ch179_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch179_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch179_empty_n : IN STD_LOGIC;
        vector_out_len_ch179_read : OUT STD_LOGIC;
        systolic_input_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        systolic_input_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_input_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_input_full_n : IN STD_LOGIC;
        systolic_input_write : OUT STD_LOGIC;
        stream_weight_row_index_din : OUT STD_LOGIC_VECTOR (639 downto 0);
        stream_weight_row_index_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_row_index_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_row_index_full_n : IN STD_LOGIC;
        stream_weight_row_index_write : OUT STD_LOGIC;
        stream_pe_valid83_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        stream_pe_valid83_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_pe_valid83_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_pe_valid83_full_n : IN STD_LOGIC;
        stream_pe_valid83_write : OUT STD_LOGIC;
        stream_bias_col_index82_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        stream_bias_col_index82_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_col_index82_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_col_index82_full_n : IN STD_LOGIC;
        stream_bias_col_index82_write : OUT STD_LOGIC );
    end component;


    component RBM_weight_bias_memory IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_bias_col_index82_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        stream_bias_col_index82_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_col_index82_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_col_index82_empty_n : IN STD_LOGIC;
        stream_bias_col_index82_read : OUT STD_LOGIC;
        stream_weight_row_index_dout : IN STD_LOGIC_VECTOR (639 downto 0);
        stream_weight_row_index_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_row_index_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_row_index_empty_n : IN STD_LOGIC;
        stream_weight_row_index_read : OUT STD_LOGIC;
        stream_bias_in_TVALID : IN STD_LOGIC;
        stream_weight_in_TVALID : IN STD_LOGIC;
        vector_in_len_ch378_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        vector_in_len_ch378_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch378_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_in_len_ch378_empty_n : IN STD_LOGIC;
        vector_in_len_ch378_read : OUT STD_LOGIC;
        vector_out_len_ch280_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        vector_out_len_ch280_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch280_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch280_empty_n : IN STD_LOGIC;
        vector_out_len_ch280_read : OUT STD_LOGIC;
        control_ch375_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch375_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch375_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        control_ch375_empty_n : IN STD_LOGIC;
        control_ch375_read : OUT STD_LOGIC;
        stream_bias_out84_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        stream_bias_out84_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_out84_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_out84_full_n : IN STD_LOGIC;
        stream_bias_out84_write : OUT STD_LOGIC;
        stream_weight_out_din : OUT STD_LOGIC_VECTOR (1599 downto 0);
        stream_weight_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_out_full_n : IN STD_LOGIC;
        stream_weight_out_write : OUT STD_LOGIC;
        stream_weight_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        stream_weight_in_TREADY : OUT STD_LOGIC;
        stream_bias_in_TDATA : IN STD_LOGIC_VECTOR (47 downto 0);
        stream_bias_in_TREADY : OUT STD_LOGIC );
    end component;


    component RBM_systolic_array IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        systolic_input_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        systolic_input_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_input_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_input_empty_n : IN STD_LOGIC;
        systolic_input_read : OUT STD_LOGIC;
        stream_bias_out84_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        stream_bias_out84_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_out84_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_bias_out84_empty_n : IN STD_LOGIC;
        stream_bias_out84_read : OUT STD_LOGIC;
        stream_pe_valid83_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        stream_pe_valid83_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_pe_valid83_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_pe_valid83_empty_n : IN STD_LOGIC;
        stream_pe_valid83_read : OUT STD_LOGIC;
        stream_weight_out_dout : IN STD_LOGIC_VECTOR (1599 downto 0);
        stream_weight_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_weight_out_empty_n : IN STD_LOGIC;
        stream_weight_out_read : OUT STD_LOGIC;
        vector_out_len_ch381_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        vector_out_len_ch381_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch381_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        vector_out_len_ch381_empty_n : IN STD_LOGIC;
        vector_out_len_ch381_read : OUT STD_LOGIC;
        systolic_out_din : OUT STD_LOGIC_VECTOR (48 downto 0);
        systolic_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_out_full_n : IN STD_LOGIC;
        systolic_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component RBM_sigmoid IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        systolic_out_dout : IN STD_LOGIC_VECTOR (48 downto 0);
        systolic_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        systolic_out_empty_n : IN STD_LOGIC;
        systolic_out_read : OUT STD_LOGIC;
        stream_sigmoid_switch_TVALID : IN STD_LOGIC;
        stream_vector_out_TREADY : IN STD_LOGIC;
        stream_sigmoid_switch_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_sigmoid_switch_TREADY : OUT STD_LOGIC;
        stream_vector_out_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        stream_vector_out_TVALID : OUT STD_LOGIC );
    end component;


    component RBM_fifo_w8_d128_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w12_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w21_d1024_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w21_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w640_d128_D IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (639 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (639 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w10_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w64_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w1600_d128_D IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1599 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1599 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w48_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (47 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (47 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_fifo_w49_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (48 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (48 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_start_for_double_buffer_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_start_for_data_flow_control_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_start_for_weight_bias_memory_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_start_for_systolic_array_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component RBM_start_for_sigmoid_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    control_split_U0 : component RBM_control_split
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => control_split_U0_ap_start,
        start_full_n => control_split_U0_start_full_n,
        ap_done => control_split_U0_ap_done,
        ap_continue => control_split_U0_ap_continue,
        ap_idle => control_split_U0_ap_idle,
        ap_ready => control_split_U0_ap_ready,
        stream_control_in_TVALID => stream_control_in_TVALID,
        control_ch173_din => control_split_U0_control_ch173_din,
        control_ch173_num_data_valid => control_ch1_num_data_valid,
        control_ch173_fifo_cap => control_ch1_fifo_cap,
        control_ch173_full_n => control_ch1_full_n,
        control_ch173_write => control_split_U0_control_ch173_write,
        control_ch274_din => control_split_U0_control_ch274_din,
        control_ch274_num_data_valid => control_ch2_num_data_valid,
        control_ch274_fifo_cap => control_ch2_fifo_cap,
        control_ch274_full_n => control_ch2_full_n,
        control_ch274_write => control_split_U0_control_ch274_write,
        control_ch375_din => control_split_U0_control_ch375_din,
        control_ch375_num_data_valid => control_ch3_num_data_valid,
        control_ch375_fifo_cap => control_ch3_fifo_cap,
        control_ch375_full_n => control_ch3_full_n,
        control_ch375_write => control_split_U0_control_ch375_write,
        start_out => control_split_U0_start_out,
        start_write => control_split_U0_start_write,
        stream_control_in_TDATA => stream_control_in_TDATA,
        stream_control_in_TREADY => control_split_U0_stream_control_in_TREADY);

    rbm_size_split_U0 : component RBM_rbm_size_split
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => rbm_size_split_U0_ap_start,
        start_full_n => start_for_systolic_array_U0_full_n,
        ap_done => rbm_size_split_U0_ap_done,
        ap_continue => rbm_size_split_U0_ap_continue,
        ap_idle => rbm_size_split_U0_ap_idle,
        ap_ready => rbm_size_split_U0_ap_ready,
        vector_in_len_TVALID => vector_in_len_TVALID,
        vector_out_len_TVALID => vector_out_len_TVALID,
        vector_in_len_ch176_din => rbm_size_split_U0_vector_in_len_ch176_din,
        vector_in_len_ch176_num_data_valid => vector_in_len_ch1_num_data_valid,
        vector_in_len_ch176_fifo_cap => vector_in_len_ch1_fifo_cap,
        vector_in_len_ch176_full_n => vector_in_len_ch1_full_n,
        vector_in_len_ch176_write => rbm_size_split_U0_vector_in_len_ch176_write,
        vector_in_len_ch277_din => rbm_size_split_U0_vector_in_len_ch277_din,
        vector_in_len_ch277_num_data_valid => vector_in_len_ch2_num_data_valid,
        vector_in_len_ch277_fifo_cap => vector_in_len_ch2_fifo_cap,
        vector_in_len_ch277_full_n => vector_in_len_ch2_full_n,
        vector_in_len_ch277_write => rbm_size_split_U0_vector_in_len_ch277_write,
        vector_in_len_ch378_din => rbm_size_split_U0_vector_in_len_ch378_din,
        vector_in_len_ch378_num_data_valid => vector_in_len_ch3_num_data_valid,
        vector_in_len_ch378_fifo_cap => vector_in_len_ch3_fifo_cap,
        vector_in_len_ch378_full_n => vector_in_len_ch3_full_n,
        vector_in_len_ch378_write => rbm_size_split_U0_vector_in_len_ch378_write,
        vector_out_len_ch179_din => rbm_size_split_U0_vector_out_len_ch179_din,
        vector_out_len_ch179_num_data_valid => vector_out_len_ch1_num_data_valid,
        vector_out_len_ch179_fifo_cap => vector_out_len_ch1_fifo_cap,
        vector_out_len_ch179_full_n => vector_out_len_ch1_full_n,
        vector_out_len_ch179_write => rbm_size_split_U0_vector_out_len_ch179_write,
        vector_out_len_ch280_din => rbm_size_split_U0_vector_out_len_ch280_din,
        vector_out_len_ch280_num_data_valid => vector_out_len_ch2_num_data_valid,
        vector_out_len_ch280_fifo_cap => vector_out_len_ch2_fifo_cap,
        vector_out_len_ch280_full_n => vector_out_len_ch2_full_n,
        vector_out_len_ch280_write => rbm_size_split_U0_vector_out_len_ch280_write,
        vector_out_len_ch381_din => rbm_size_split_U0_vector_out_len_ch381_din,
        vector_out_len_ch381_num_data_valid => vector_out_len_ch3_num_data_valid,
        vector_out_len_ch381_fifo_cap => vector_out_len_ch3_fifo_cap,
        vector_out_len_ch381_full_n => vector_out_len_ch3_full_n,
        vector_out_len_ch381_write => rbm_size_split_U0_vector_out_len_ch381_write,
        start_out => rbm_size_split_U0_start_out,
        start_write => rbm_size_split_U0_start_write,
        vector_in_len_TDATA => vector_in_len_TDATA,
        vector_in_len_TREADY => rbm_size_split_U0_vector_in_len_TREADY,
        vector_out_len_TDATA => vector_out_len_TDATA,
        vector_out_len_TREADY => rbm_size_split_U0_vector_out_len_TREADY);

    double_buffer_U0 : component RBM_double_buffer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => double_buffer_U0_ap_start,
        ap_done => double_buffer_U0_ap_done,
        ap_continue => double_buffer_U0_ap_continue,
        ap_idle => double_buffer_U0_ap_idle,
        ap_ready => double_buffer_U0_ap_ready,
        stream_vector_in_TVALID => stream_vector_in_TVALID,
        vector_in_len_ch176_dout => vector_in_len_ch1_dout,
        vector_in_len_ch176_num_data_valid => vector_in_len_ch1_num_data_valid,
        vector_in_len_ch176_fifo_cap => vector_in_len_ch1_fifo_cap,
        vector_in_len_ch176_empty_n => vector_in_len_ch1_empty_n,
        vector_in_len_ch176_read => double_buffer_U0_vector_in_len_ch176_read,
        control_ch173_dout => control_ch1_dout,
        control_ch173_num_data_valid => control_ch1_num_data_valid,
        control_ch173_fifo_cap => control_ch1_fifo_cap,
        control_ch173_empty_n => control_ch1_empty_n,
        control_ch173_read => double_buffer_U0_control_ch173_read,
        buffer_out_din => double_buffer_U0_buffer_out_din,
        buffer_out_num_data_valid => buffer_out_num_data_valid,
        buffer_out_fifo_cap => buffer_out_fifo_cap,
        buffer_out_full_n => buffer_out_full_n,
        buffer_out_write => double_buffer_U0_buffer_out_write,
        stream_vector_in_TDATA => stream_vector_in_TDATA,
        stream_vector_in_TREADY => double_buffer_U0_stream_vector_in_TREADY);

    data_flow_control_U0 : component RBM_data_flow_control
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => data_flow_control_U0_ap_start,
        ap_done => data_flow_control_U0_ap_done,
        ap_continue => data_flow_control_U0_ap_continue,
        ap_idle => data_flow_control_U0_ap_idle,
        ap_ready => data_flow_control_U0_ap_ready,
        control_ch274_dout => control_ch2_dout,
        control_ch274_num_data_valid => control_ch2_num_data_valid,
        control_ch274_fifo_cap => control_ch2_fifo_cap,
        control_ch274_empty_n => control_ch2_empty_n,
        control_ch274_read => data_flow_control_U0_control_ch274_read,
        buffer_out_dout => buffer_out_dout,
        buffer_out_num_data_valid => buffer_out_num_data_valid,
        buffer_out_fifo_cap => buffer_out_fifo_cap,
        buffer_out_empty_n => buffer_out_empty_n,
        buffer_out_read => data_flow_control_U0_buffer_out_read,
        vector_in_len_ch277_dout => vector_in_len_ch2_dout,
        vector_in_len_ch277_num_data_valid => vector_in_len_ch2_num_data_valid,
        vector_in_len_ch277_fifo_cap => vector_in_len_ch2_fifo_cap,
        vector_in_len_ch277_empty_n => vector_in_len_ch2_empty_n,
        vector_in_len_ch277_read => data_flow_control_U0_vector_in_len_ch277_read,
        vector_out_len_ch179_dout => vector_out_len_ch1_dout,
        vector_out_len_ch179_num_data_valid => vector_out_len_ch1_num_data_valid,
        vector_out_len_ch179_fifo_cap => vector_out_len_ch1_fifo_cap,
        vector_out_len_ch179_empty_n => vector_out_len_ch1_empty_n,
        vector_out_len_ch179_read => data_flow_control_U0_vector_out_len_ch179_read,
        systolic_input_din => data_flow_control_U0_systolic_input_din,
        systolic_input_num_data_valid => systolic_input_num_data_valid,
        systolic_input_fifo_cap => systolic_input_fifo_cap,
        systolic_input_full_n => systolic_input_full_n,
        systolic_input_write => data_flow_control_U0_systolic_input_write,
        stream_weight_row_index_din => data_flow_control_U0_stream_weight_row_index_din,
        stream_weight_row_index_num_data_valid => stream_weight_row_index_num_data_valid,
        stream_weight_row_index_fifo_cap => stream_weight_row_index_fifo_cap,
        stream_weight_row_index_full_n => stream_weight_row_index_full_n,
        stream_weight_row_index_write => data_flow_control_U0_stream_weight_row_index_write,
        stream_pe_valid83_din => data_flow_control_U0_stream_pe_valid83_din,
        stream_pe_valid83_num_data_valid => stream_pe_valid_num_data_valid,
        stream_pe_valid83_fifo_cap => stream_pe_valid_fifo_cap,
        stream_pe_valid83_full_n => stream_pe_valid_full_n,
        stream_pe_valid83_write => data_flow_control_U0_stream_pe_valid83_write,
        stream_bias_col_index82_din => data_flow_control_U0_stream_bias_col_index82_din,
        stream_bias_col_index82_num_data_valid => stream_bias_col_index_num_data_valid,
        stream_bias_col_index82_fifo_cap => stream_bias_col_index_fifo_cap,
        stream_bias_col_index82_full_n => stream_bias_col_index_full_n,
        stream_bias_col_index82_write => data_flow_control_U0_stream_bias_col_index82_write);

    weight_bias_memory_U0 : component RBM_weight_bias_memory
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => weight_bias_memory_U0_ap_start,
        ap_done => weight_bias_memory_U0_ap_done,
        ap_continue => weight_bias_memory_U0_ap_continue,
        ap_idle => weight_bias_memory_U0_ap_idle,
        ap_ready => weight_bias_memory_U0_ap_ready,
        stream_bias_col_index82_dout => stream_bias_col_index_dout,
        stream_bias_col_index82_num_data_valid => stream_bias_col_index_num_data_valid,
        stream_bias_col_index82_fifo_cap => stream_bias_col_index_fifo_cap,
        stream_bias_col_index82_empty_n => stream_bias_col_index_empty_n,
        stream_bias_col_index82_read => weight_bias_memory_U0_stream_bias_col_index82_read,
        stream_weight_row_index_dout => stream_weight_row_index_dout,
        stream_weight_row_index_num_data_valid => stream_weight_row_index_num_data_valid,
        stream_weight_row_index_fifo_cap => stream_weight_row_index_fifo_cap,
        stream_weight_row_index_empty_n => stream_weight_row_index_empty_n,
        stream_weight_row_index_read => weight_bias_memory_U0_stream_weight_row_index_read,
        stream_bias_in_TVALID => stream_bias_in_TVALID,
        stream_weight_in_TVALID => stream_weight_in_TVALID,
        vector_in_len_ch378_dout => vector_in_len_ch3_dout,
        vector_in_len_ch378_num_data_valid => vector_in_len_ch3_num_data_valid,
        vector_in_len_ch378_fifo_cap => vector_in_len_ch3_fifo_cap,
        vector_in_len_ch378_empty_n => vector_in_len_ch3_empty_n,
        vector_in_len_ch378_read => weight_bias_memory_U0_vector_in_len_ch378_read,
        vector_out_len_ch280_dout => vector_out_len_ch2_dout,
        vector_out_len_ch280_num_data_valid => vector_out_len_ch2_num_data_valid,
        vector_out_len_ch280_fifo_cap => vector_out_len_ch2_fifo_cap,
        vector_out_len_ch280_empty_n => vector_out_len_ch2_empty_n,
        vector_out_len_ch280_read => weight_bias_memory_U0_vector_out_len_ch280_read,
        control_ch375_dout => control_ch3_dout,
        control_ch375_num_data_valid => control_ch3_num_data_valid,
        control_ch375_fifo_cap => control_ch3_fifo_cap,
        control_ch375_empty_n => control_ch3_empty_n,
        control_ch375_read => weight_bias_memory_U0_control_ch375_read,
        stream_bias_out84_din => weight_bias_memory_U0_stream_bias_out84_din,
        stream_bias_out84_num_data_valid => stream_bias_out_num_data_valid,
        stream_bias_out84_fifo_cap => stream_bias_out_fifo_cap,
        stream_bias_out84_full_n => stream_bias_out_full_n,
        stream_bias_out84_write => weight_bias_memory_U0_stream_bias_out84_write,
        stream_weight_out_din => weight_bias_memory_U0_stream_weight_out_din,
        stream_weight_out_num_data_valid => stream_weight_out_num_data_valid,
        stream_weight_out_fifo_cap => stream_weight_out_fifo_cap,
        stream_weight_out_full_n => stream_weight_out_full_n,
        stream_weight_out_write => weight_bias_memory_U0_stream_weight_out_write,
        stream_weight_in_TDATA => stream_weight_in_TDATA,
        stream_weight_in_TREADY => weight_bias_memory_U0_stream_weight_in_TREADY,
        stream_bias_in_TDATA => stream_bias_in_TDATA,
        stream_bias_in_TREADY => weight_bias_memory_U0_stream_bias_in_TREADY);

    systolic_array_U0 : component RBM_systolic_array
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => systolic_array_U0_ap_start,
        start_full_n => start_for_sigmoid_U0_full_n,
        ap_done => systolic_array_U0_ap_done,
        ap_continue => systolic_array_U0_ap_continue,
        ap_idle => systolic_array_U0_ap_idle,
        ap_ready => systolic_array_U0_ap_ready,
        systolic_input_dout => systolic_input_dout,
        systolic_input_num_data_valid => systolic_input_num_data_valid,
        systolic_input_fifo_cap => systolic_input_fifo_cap,
        systolic_input_empty_n => systolic_input_empty_n,
        systolic_input_read => systolic_array_U0_systolic_input_read,
        stream_bias_out84_dout => stream_bias_out_dout,
        stream_bias_out84_num_data_valid => stream_bias_out_num_data_valid,
        stream_bias_out84_fifo_cap => stream_bias_out_fifo_cap,
        stream_bias_out84_empty_n => stream_bias_out_empty_n,
        stream_bias_out84_read => systolic_array_U0_stream_bias_out84_read,
        stream_pe_valid83_dout => stream_pe_valid_dout,
        stream_pe_valid83_num_data_valid => stream_pe_valid_num_data_valid,
        stream_pe_valid83_fifo_cap => stream_pe_valid_fifo_cap,
        stream_pe_valid83_empty_n => stream_pe_valid_empty_n,
        stream_pe_valid83_read => systolic_array_U0_stream_pe_valid83_read,
        stream_weight_out_dout => stream_weight_out_dout,
        stream_weight_out_num_data_valid => stream_weight_out_num_data_valid,
        stream_weight_out_fifo_cap => stream_weight_out_fifo_cap,
        stream_weight_out_empty_n => stream_weight_out_empty_n,
        stream_weight_out_read => systolic_array_U0_stream_weight_out_read,
        vector_out_len_ch381_dout => vector_out_len_ch3_dout,
        vector_out_len_ch381_num_data_valid => vector_out_len_ch3_num_data_valid,
        vector_out_len_ch381_fifo_cap => vector_out_len_ch3_fifo_cap,
        vector_out_len_ch381_empty_n => vector_out_len_ch3_empty_n,
        vector_out_len_ch381_read => systolic_array_U0_vector_out_len_ch381_read,
        systolic_out_din => systolic_array_U0_systolic_out_din,
        systolic_out_num_data_valid => systolic_out_num_data_valid,
        systolic_out_fifo_cap => systolic_out_fifo_cap,
        systolic_out_full_n => systolic_out_full_n,
        systolic_out_write => systolic_array_U0_systolic_out_write,
        start_out => systolic_array_U0_start_out,
        start_write => systolic_array_U0_start_write);

    sigmoid_U0 : component RBM_sigmoid
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => sigmoid_U0_ap_start,
        ap_done => sigmoid_U0_ap_done,
        ap_continue => sigmoid_U0_ap_continue,
        ap_idle => sigmoid_U0_ap_idle,
        ap_ready => sigmoid_U0_ap_ready,
        systolic_out_dout => systolic_out_dout,
        systolic_out_num_data_valid => systolic_out_num_data_valid,
        systolic_out_fifo_cap => systolic_out_fifo_cap,
        systolic_out_empty_n => systolic_out_empty_n,
        systolic_out_read => sigmoid_U0_systolic_out_read,
        stream_sigmoid_switch_TVALID => stream_sigmoid_switch_TVALID,
        stream_vector_out_TREADY => stream_vector_out_TREADY,
        stream_sigmoid_switch_TDATA => stream_sigmoid_switch_TDATA,
        stream_sigmoid_switch_TREADY => sigmoid_U0_stream_sigmoid_switch_TREADY,
        stream_vector_out_TDATA => sigmoid_U0_stream_vector_out_TDATA,
        stream_vector_out_TVALID => sigmoid_U0_stream_vector_out_TVALID);

    control_ch1_U : component RBM_fifo_w8_d128_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => control_split_U0_control_ch173_din,
        if_full_n => control_ch1_full_n,
        if_write => control_split_U0_control_ch173_write,
        if_dout => control_ch1_dout,
        if_num_data_valid => control_ch1_num_data_valid,
        if_fifo_cap => control_ch1_fifo_cap,
        if_empty_n => control_ch1_empty_n,
        if_read => double_buffer_U0_control_ch173_read);

    control_ch2_U : component RBM_fifo_w8_d128_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => control_split_U0_control_ch274_din,
        if_full_n => control_ch2_full_n,
        if_write => control_split_U0_control_ch274_write,
        if_dout => control_ch2_dout,
        if_num_data_valid => control_ch2_num_data_valid,
        if_fifo_cap => control_ch2_fifo_cap,
        if_empty_n => control_ch2_empty_n,
        if_read => data_flow_control_U0_control_ch274_read);

    control_ch3_U : component RBM_fifo_w8_d128_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => control_split_U0_control_ch375_din,
        if_full_n => control_ch3_full_n,
        if_write => control_split_U0_control_ch375_write,
        if_dout => control_ch3_dout,
        if_num_data_valid => control_ch3_num_data_valid,
        if_fifo_cap => control_ch3_fifo_cap,
        if_empty_n => control_ch3_empty_n,
        if_read => weight_bias_memory_U0_control_ch375_read);

    vector_in_len_ch1_U : component RBM_fifo_w12_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rbm_size_split_U0_vector_in_len_ch176_din,
        if_full_n => vector_in_len_ch1_full_n,
        if_write => rbm_size_split_U0_vector_in_len_ch176_write,
        if_dout => vector_in_len_ch1_dout,
        if_num_data_valid => vector_in_len_ch1_num_data_valid,
        if_fifo_cap => vector_in_len_ch1_fifo_cap,
        if_empty_n => vector_in_len_ch1_empty_n,
        if_read => double_buffer_U0_vector_in_len_ch176_read);

    vector_in_len_ch2_U : component RBM_fifo_w12_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rbm_size_split_U0_vector_in_len_ch277_din,
        if_full_n => vector_in_len_ch2_full_n,
        if_write => rbm_size_split_U0_vector_in_len_ch277_write,
        if_dout => vector_in_len_ch2_dout,
        if_num_data_valid => vector_in_len_ch2_num_data_valid,
        if_fifo_cap => vector_in_len_ch2_fifo_cap,
        if_empty_n => vector_in_len_ch2_empty_n,
        if_read => data_flow_control_U0_vector_in_len_ch277_read);

    vector_in_len_ch3_U : component RBM_fifo_w12_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rbm_size_split_U0_vector_in_len_ch378_din,
        if_full_n => vector_in_len_ch3_full_n,
        if_write => rbm_size_split_U0_vector_in_len_ch378_write,
        if_dout => vector_in_len_ch3_dout,
        if_num_data_valid => vector_in_len_ch3_num_data_valid,
        if_fifo_cap => vector_in_len_ch3_fifo_cap,
        if_empty_n => vector_in_len_ch3_empty_n,
        if_read => weight_bias_memory_U0_vector_in_len_ch378_read);

    vector_out_len_ch1_U : component RBM_fifo_w12_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rbm_size_split_U0_vector_out_len_ch179_din,
        if_full_n => vector_out_len_ch1_full_n,
        if_write => rbm_size_split_U0_vector_out_len_ch179_write,
        if_dout => vector_out_len_ch1_dout,
        if_num_data_valid => vector_out_len_ch1_num_data_valid,
        if_fifo_cap => vector_out_len_ch1_fifo_cap,
        if_empty_n => vector_out_len_ch1_empty_n,
        if_read => data_flow_control_U0_vector_out_len_ch179_read);

    vector_out_len_ch2_U : component RBM_fifo_w12_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rbm_size_split_U0_vector_out_len_ch280_din,
        if_full_n => vector_out_len_ch2_full_n,
        if_write => rbm_size_split_U0_vector_out_len_ch280_write,
        if_dout => vector_out_len_ch2_dout,
        if_num_data_valid => vector_out_len_ch2_num_data_valid,
        if_fifo_cap => vector_out_len_ch2_fifo_cap,
        if_empty_n => vector_out_len_ch2_empty_n,
        if_read => weight_bias_memory_U0_vector_out_len_ch280_read);

    vector_out_len_ch3_U : component RBM_fifo_w12_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rbm_size_split_U0_vector_out_len_ch381_din,
        if_full_n => vector_out_len_ch3_full_n,
        if_write => rbm_size_split_U0_vector_out_len_ch381_write,
        if_dout => vector_out_len_ch3_dout,
        if_num_data_valid => vector_out_len_ch3_num_data_valid,
        if_fifo_cap => vector_out_len_ch3_fifo_cap,
        if_empty_n => vector_out_len_ch3_empty_n,
        if_read => systolic_array_U0_vector_out_len_ch381_read);

    buffer_out_U : component RBM_fifo_w21_d1024_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => double_buffer_U0_buffer_out_din,
        if_full_n => buffer_out_full_n,
        if_write => double_buffer_U0_buffer_out_write,
        if_dout => buffer_out_dout,
        if_num_data_valid => buffer_out_num_data_valid,
        if_fifo_cap => buffer_out_fifo_cap,
        if_empty_n => buffer_out_empty_n,
        if_read => data_flow_control_U0_buffer_out_read);

    systolic_input_U : component RBM_fifo_w21_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_flow_control_U0_systolic_input_din,
        if_full_n => systolic_input_full_n,
        if_write => data_flow_control_U0_systolic_input_write,
        if_dout => systolic_input_dout,
        if_num_data_valid => systolic_input_num_data_valid,
        if_fifo_cap => systolic_input_fifo_cap,
        if_empty_n => systolic_input_empty_n,
        if_read => systolic_array_U0_systolic_input_read);

    stream_weight_row_index_U : component RBM_fifo_w640_d128_D
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_flow_control_U0_stream_weight_row_index_din,
        if_full_n => stream_weight_row_index_full_n,
        if_write => data_flow_control_U0_stream_weight_row_index_write,
        if_dout => stream_weight_row_index_dout,
        if_num_data_valid => stream_weight_row_index_num_data_valid,
        if_fifo_cap => stream_weight_row_index_fifo_cap,
        if_empty_n => stream_weight_row_index_empty_n,
        if_read => weight_bias_memory_U0_stream_weight_row_index_read);

    stream_bias_col_index_U : component RBM_fifo_w10_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_flow_control_U0_stream_bias_col_index82_din,
        if_full_n => stream_bias_col_index_full_n,
        if_write => data_flow_control_U0_stream_bias_col_index82_write,
        if_dout => stream_bias_col_index_dout,
        if_num_data_valid => stream_bias_col_index_num_data_valid,
        if_fifo_cap => stream_bias_col_index_fifo_cap,
        if_empty_n => stream_bias_col_index_empty_n,
        if_read => weight_bias_memory_U0_stream_bias_col_index82_read);

    stream_pe_valid_U : component RBM_fifo_w64_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_flow_control_U0_stream_pe_valid83_din,
        if_full_n => stream_pe_valid_full_n,
        if_write => data_flow_control_U0_stream_pe_valid83_write,
        if_dout => stream_pe_valid_dout,
        if_num_data_valid => stream_pe_valid_num_data_valid,
        if_fifo_cap => stream_pe_valid_fifo_cap,
        if_empty_n => stream_pe_valid_empty_n,
        if_read => systolic_array_U0_stream_pe_valid83_read);

    stream_weight_out_U : component RBM_fifo_w1600_d128_D
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => weight_bias_memory_U0_stream_weight_out_din,
        if_full_n => stream_weight_out_full_n,
        if_write => weight_bias_memory_U0_stream_weight_out_write,
        if_dout => stream_weight_out_dout,
        if_num_data_valid => stream_weight_out_num_data_valid,
        if_fifo_cap => stream_weight_out_fifo_cap,
        if_empty_n => stream_weight_out_empty_n,
        if_read => systolic_array_U0_stream_weight_out_read);

    stream_bias_out_U : component RBM_fifo_w48_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => weight_bias_memory_U0_stream_bias_out84_din,
        if_full_n => stream_bias_out_full_n,
        if_write => weight_bias_memory_U0_stream_bias_out84_write,
        if_dout => stream_bias_out_dout,
        if_num_data_valid => stream_bias_out_num_data_valid,
        if_fifo_cap => stream_bias_out_fifo_cap,
        if_empty_n => stream_bias_out_empty_n,
        if_read => systolic_array_U0_stream_bias_out84_read);

    systolic_out_U : component RBM_fifo_w49_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => systolic_array_U0_systolic_out_din,
        if_full_n => systolic_out_full_n,
        if_write => systolic_array_U0_systolic_out_write,
        if_dout => systolic_out_dout,
        if_num_data_valid => systolic_out_num_data_valid,
        if_fifo_cap => systolic_out_fifo_cap,
        if_empty_n => systolic_out_empty_n,
        if_read => sigmoid_U0_systolic_out_read);

    start_for_double_buffer_U0_U : component RBM_start_for_double_buffer_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_double_buffer_U0_din,
        if_full_n => start_for_double_buffer_U0_full_n,
        if_write => control_split_U0_start_write,
        if_dout => start_for_double_buffer_U0_dout,
        if_empty_n => start_for_double_buffer_U0_empty_n,
        if_read => double_buffer_U0_ap_ready);

    start_for_data_flow_control_U0_U : component RBM_start_for_data_flow_control_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_data_flow_control_U0_din,
        if_full_n => start_for_data_flow_control_U0_full_n,
        if_write => control_split_U0_start_write,
        if_dout => start_for_data_flow_control_U0_dout,
        if_empty_n => start_for_data_flow_control_U0_empty_n,
        if_read => data_flow_control_U0_ap_ready);

    start_for_weight_bias_memory_U0_U : component RBM_start_for_weight_bias_memory_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_weight_bias_memory_U0_din,
        if_full_n => start_for_weight_bias_memory_U0_full_n,
        if_write => control_split_U0_start_write,
        if_dout => start_for_weight_bias_memory_U0_dout,
        if_empty_n => start_for_weight_bias_memory_U0_empty_n,
        if_read => weight_bias_memory_U0_ap_ready);

    start_for_systolic_array_U0_U : component RBM_start_for_systolic_array_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_systolic_array_U0_din,
        if_full_n => start_for_systolic_array_U0_full_n,
        if_write => rbm_size_split_U0_start_write,
        if_dout => start_for_systolic_array_U0_dout,
        if_empty_n => start_for_systolic_array_U0_empty_n,
        if_read => systolic_array_U0_ap_ready);

    start_for_sigmoid_U0_U : component RBM_start_for_sigmoid_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_sigmoid_U0_din,
        if_full_n => start_for_sigmoid_U0_full_n,
        if_write => systolic_array_U0_start_write,
        if_dout => start_for_sigmoid_U0_dout,
        if_empty_n => start_for_sigmoid_U0_empty_n,
        if_read => sigmoid_U0_ap_ready);





    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    control_split_U0_ap_continue <= ap_const_logic_1;
    control_split_U0_ap_start <= ap_const_logic_1;
    control_split_U0_start_full_n <= (start_for_weight_bias_memory_U0_full_n and start_for_double_buffer_U0_full_n and start_for_data_flow_control_U0_full_n);
    data_flow_control_U0_ap_continue <= ap_const_logic_1;
    data_flow_control_U0_ap_start <= start_for_data_flow_control_U0_empty_n;
    double_buffer_U0_ap_continue <= ap_const_logic_1;
    double_buffer_U0_ap_start <= start_for_double_buffer_U0_empty_n;
    rbm_size_split_U0_ap_continue <= ap_const_logic_1;
    rbm_size_split_U0_ap_start <= ap_const_logic_1;
    sigmoid_U0_ap_continue <= ap_const_logic_1;
    sigmoid_U0_ap_start <= start_for_sigmoid_U0_empty_n;
    start_for_data_flow_control_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_double_buffer_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_sigmoid_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_systolic_array_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_weight_bias_memory_U0_din <= (0=>ap_const_logic_1, others=>'-');
    stream_bias_in_TREADY <= weight_bias_memory_U0_stream_bias_in_TREADY;
    stream_control_in_TREADY <= control_split_U0_stream_control_in_TREADY;
    stream_sigmoid_switch_TREADY <= sigmoid_U0_stream_sigmoid_switch_TREADY;
    stream_vector_in_TREADY <= double_buffer_U0_stream_vector_in_TREADY;
    stream_vector_out_TDATA <= sigmoid_U0_stream_vector_out_TDATA;
    stream_vector_out_TVALID <= sigmoid_U0_stream_vector_out_TVALID;
    stream_weight_in_TREADY <= weight_bias_memory_U0_stream_weight_in_TREADY;
    systolic_array_U0_ap_continue <= ap_const_logic_1;
    systolic_array_U0_ap_start <= start_for_systolic_array_U0_empty_n;
    vector_in_len_TREADY <= rbm_size_split_U0_vector_in_len_TREADY;
    vector_out_len_TREADY <= rbm_size_split_U0_vector_out_len_TREADY;
    weight_bias_memory_U0_ap_continue <= ap_const_logic_1;
    weight_bias_memory_U0_ap_start <= start_for_weight_bias_memory_U0_empty_n;
end behav;
